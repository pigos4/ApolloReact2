[{"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js":"1","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js":"2","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Crypto.js":"3","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/query/graphql.js":"4","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/List.js":"5","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/components/Scanner.js":"6","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js":"7"},{"size":3192,"mtime":1615682364596,"results":"8","hashOfConfig":"9"},{"size":4549,"mtime":1614034080850,"results":"10","hashOfConfig":"9"},{"size":1712,"mtime":1615673844803,"results":"11","hashOfConfig":"9"},{"size":394,"mtime":1615674264364,"results":"12","hashOfConfig":"9"},{"size":2025,"mtime":1615683039391,"results":"13","hashOfConfig":"9"},{"size":1982,"mtime":1612699281045,"results":"14","hashOfConfig":"9"},{"size":484,"mtime":1615683103193,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rt6tv3",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js",["31"],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Crypto.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/query/graphql.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/List.js",["32"],"import React, { useState} from \"react\";\nimport Scanner from \"./components/Scanner\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport {Redirect } from \"react-router-dom\";\nimport \"./styles.css\";   \n\nexport default function List (){\n\n      const [camera, setCamera] = useState(false);\n      const [result, setResult] = useState(null);\n\n      const onDetected = result => {\n        setResult(result);\n      };\n      \n      \n      function AddRecord(){\n        const ADD_INPUT = gql`\n        mutation($name: String!, $price: Int!, $barcode: String!) {\n          addInput(name: $name, price: $price, barcode: $barcode) {\n            response\n            \n          }\n        }\n      `;\n\n  const [addInput, { data, loading }] = useMutation(ADD_INPUT);\n\n        const [inputName, setinputName ] =useState({name:\"\",price:0,barcode:result} );\n//        const [inputPrice, setinputPrice ] =useState(NaN);\n\ndata?console.log(data):console.log('')\n        return(<>\n        Add the name and the price:\n        <input type=\"text\" onChange={(e)=>setinputName({name:e.target.value,price:inputName.price,barcode:result})} placeholder=\"Name\"></input>\n        <input type=\"number\" onChange={(e)=>setinputName({name:inputName.name,price:parseInt(e.target.value),barcode:result})} placeholder=\"Price\"></input>\n        <input type=\"submit\" onClick={()=>addInput({ variables: inputName })}></input>\n        \n        {(data)?(data.addInput.response===\"added\")?(<Redirect\n            to=\"records\"/>):\"error\":console.log('we')}\n        </>)\n      }\n      return (\n        <div className=\"App\">\n          Save your products.\n          To start scann your barcode\n          <p>{result ? result : \"Scanning...\"}</p>\n         \n          <button onClick={() => setCamera(!camera)}>\n            {camera ? \"Stop\" : \"Start\"}\n          </button>\n          <div className=\"container\">\n            {camera && <Scanner onDetected={onDetected} />}\n          </div>\n          {(result !==null)?<AddRecord/>:\"\"}\n          \n        </div>\n      );\n    }\n\n\n\n\n","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/components/Scanner.js",["33"],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js",[],{"ruleId":"34","severity":1,"message":"35","line":2,"column":15,"nodeType":"36","messageId":"37","endLine":2,"endColumn":26},{"ruleId":"34","severity":1,"message":"38","line":28,"column":28,"nodeType":"36","messageId":"37","endLine":28,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":63,"column":6,"nodeType":"41","endLine":63,"endColumn":8,"suggestions":"42"},"no-unused-vars","'useMutation' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'detected'. Either include it or remove the dependency array.","ArrayExpression",["43"],{"desc":"44","fix":"45"},"Update the dependencies array to be: [detected]",{"range":"46","text":"47"},[1650,1652],"[detected]"]