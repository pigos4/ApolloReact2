[{"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js":"1","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js":"2","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Crypto.js":"3","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/query/graphql.js":"4","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/List.js":"5","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/components/Scanner.js":"6","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js":"7","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Data.js":"8","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/context/auth.js":"9","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/context/PrivateRoute.js":"10","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Home.js":"11","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js":"12","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Signup.js":"13","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/route.js":"14","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/mutation/Signup.js":"15","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/index.js":"16"},{"size":3429,"mtime":1615724907630,"results":"17","hashOfConfig":"18"},{"size":1886,"mtime":1615688119913,"results":"19","hashOfConfig":"18"},{"size":1742,"mtime":1615724465089,"results":"20","hashOfConfig":"18"},{"size":459,"mtime":1615726036907,"results":"21","hashOfConfig":"18"},{"size":2144,"mtime":1615687500297,"results":"22","hashOfConfig":"18"},{"size":1982,"mtime":1612699281045,"results":"23","hashOfConfig":"18"},{"size":1249,"mtime":1615723054667,"results":"24","hashOfConfig":"18"},{"size":146,"mtime":1615688192311,"results":"25","hashOfConfig":"18"},{"size":164,"mtime":1615688331911,"results":"26","hashOfConfig":"18"},{"size":515,"mtime":1615688357583,"results":"27","hashOfConfig":"18"},{"size":51,"mtime":1615688454670,"results":"28","hashOfConfig":"18"},{"size":1992,"mtime":1615724690234,"results":"29","hashOfConfig":"18"},{"size":152,"mtime":1615725827190,"results":"30","hashOfConfig":"18"},{"size":812,"mtime":1615724870493,"results":"31","hashOfConfig":"18"},{"size":1890,"mtime":1617469746727,"results":"32","hashOfConfig":"18"},{"size":500,"mtime":1610647362377,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rt6tv3",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js",["70"],"import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nexport default function Home() {\n  const DATO = gql`\n    query dato($id: String) {\n      dato(id: $id) {\n        name\n        info\n        Description\n      }\n    }\n  `;\n\n  const [getFields, { loading, data }] = useLazyQuery(DATO);\n  const [inputsUser, setinputsUser] = useState({\n    id: \"36\",\n    name: \"\",\n    description: \"\",\n    extraInfo: \"\",\n    child: [],\n  });\n\n  const [renderDataLoading, setrenderDataLoading] = useState(null);\n  if (renderDataLoading === null)\n    getFields({ variables: { id: inputsUser.id } });\n\n  useEffect(() => {\n    loading\n      ? setrenderDataLoading(\n          <>\n            <p>loading</p>\n          </>\n        )\n      : setrenderDataLoading(<></>);\n\n    if (data) {\n      setrenderDataLoading(\n        <div>\n          <p>Name:{data.dato.name}</p>\n          <p>Info:{data.dato.info}</p>\n          <p>Description:{data.dato.Description}</p>\n        </div>\n      );\n    }\n  }, [loading, data]);\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, name: e.target.value })\n          }\n          placeholder=\"Name\"\n        ></input>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, description: e.target.value })\n          }\n          placeholder=\"Descriptio\"\n        ></input>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, extraInfo: e.target.value })\n          }\n          placeholder=\"ExtraInfo\"\n        ></input>\n      </div>\n      <input\n        type=\"button\"\n        onClick={() => getFields({ variables: { id: inputsUser.id } })}\n        value=\"Submit\"\n      ></input>\n\n      \n      {renderDataLoading}\n    </>\n  );\n}\n\n\n\n",["71","72"],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Crypto.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/query/graphql.js",[],["73","74"],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/List.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/components/Scanner.js",["75"],"import React, { useEffect } from \"react\";\r\nimport config from \"./config.json\";\r\nimport Quagga from \"quagga\";\r\n\r\nconst Scanner = props => {\r\n  const { onDetected } = props;\r\n\r\n  useEffect(() => {\r\n    Quagga.init(config, err => {\r\n      if (err) {\r\n        console.log(err, \"error msg\");\r\n      }\r\n      Quagga.start();\r\n      return () => {\r\n        Quagga.stop()\r\n      }\r\n    });\r\n\r\n    //detecting boxes on stream\r\n    Quagga.onProcessed(result => {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            Number(drawingCanvas.getAttribute(\"width\")),\r\n            Number(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(detected);\r\n  }, []);\r\n\r\n  const detected = result => {\r\n    onDetected(result.codeResult.code);\r\n  };\r\n\r\n  return (\r\n    // If you do not specify a target,\r\n    // QuaggaJS would look for an element that matches\r\n    // the CSS selector #interactive.viewport\r\n    <div id=\"interactive\" className=\"viewport\" />\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Data.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/context/auth.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/context/PrivateRoute.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Home.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js",["76"],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Signup.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/route.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/mutation/Signup.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/index.js",[],{"ruleId":"77","severity":1,"message":"78","line":2,"column":15,"nodeType":"79","messageId":"80","endLine":2,"endColumn":26},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":63,"column":6,"nodeType":"89","endLine":63,"endColumn":8,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":32,"column":6,"nodeType":"89","endLine":32,"endColumn":12,"suggestions":"92"},"no-unused-vars","'useMutation' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],["93"],["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'detected'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'setAuthTokens'. Either include it or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [detected]",{"range":"101","text":"102"},"Update the dependencies array to be: [data, setAuthTokens]",{"range":"103","text":"104"},[1650,1652],"[detected]",[1074,1080],"[data, setAuthTokens]"]