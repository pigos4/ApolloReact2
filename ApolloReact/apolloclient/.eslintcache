[{"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/route.js":"1","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Data.js":"2","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/RouteWithSubRoutes.js":"3","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js":"4","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/reportWebVitals.js":"5","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/mutation/Signup.js":"6","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Home.js":"7","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js":"8","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/components/AuthForms.js":"9","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Signup.js":"10","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/context/PrivateRoute.js":"11"},{"size":473,"mtime":1610930743034,"results":"12","hashOfConfig":"13"},{"size":76,"mtime":1611275926064,"results":"14","hashOfConfig":"13"},{"size":648,"mtime":1611267100579,"results":"15","hashOfConfig":"13"},{"size":1981,"mtime":1611276106758,"results":"16","hashOfConfig":"13"},{"size":362,"mtime":1610647362378,"results":"17","hashOfConfig":"13"},{"size":1342,"mtime":1610928742037,"results":"18","hashOfConfig":"13"},{"size":136,"mtime":1610806272336,"results":"19","hashOfConfig":"13"},{"size":4076,"mtime":1611276986595,"results":"20","hashOfConfig":"13"},{"size":850,"mtime":1611260947296,"results":"21","hashOfConfig":"13"},{"size":140,"mtime":1610806381102,"results":"22","hashOfConfig":"13"},{"size":512,"mtime":1610928985961,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rt6tv3",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/route.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Data.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/RouteWithSubRoutes.js",["47","48"],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js",["49"],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/reportWebVitals.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/mutation/Signup.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Home.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js",["50","51","52","53","54"],"import React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\n\n\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!, ) {\n    loginUser(  username: $username, password:$password) {\n      id,\n      username,\n      status\n    }\n  }\n`;\n\nexport default function Login(props) {\n  const [loginUser, { data, loading }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({username: \"\",  password: \"\",});\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(<></>);\n  const { setAuthTokens } = useAuth();\n  //const referer = props.location.state.referer || '/';\n  const [idd ,setId] = useState(\"\");\nif(data){\n  if (data.loginUser.status === 'ok') {console.log(data.loginUser.status,\"status\")\n  // console.log(result.data+\"res.data\")\n  // setId(result.data[1]);\n   setAuthTokens(data.loginUser.username);\n  // setLoggedIn(true);\n  // console.log(\"id\", id)\n } \n else if (data.loginUser.status === 'err') {\n  console.log('error')\n   setIsError(<p>Insert Username and password</p>);\n}\n}\n\n// if (isError === true) {\n//   return <Redirect to={\"/\"} />;\n// }\n// if (isLoggedIn) {\n//   return <Redirect to={'/data'} />;\n// }\n\n\n\n  return (\n    <>\n      <input type=\"text\" onChange={(e)=>{setUserLogin({\"username\":e.target.value,\"password\":user.password})}}placeholder=\"username\"></input>\n      <input type=\"password\" onChange={(e)=>{setUserLogin({\"username\":user.username,\"password\":e.target.value})}} placeholder=\"password\"></input>\n      <input type=\"button\" value=\"submit\" onClick={() => { loginUser({ variables: user  });}}></input>\n      \n\n      \n      <input\n        type=\"button\"\n        onClick={() => console.log(data)} value=\"consolelog\"\n      ></input>{user.username}{user.password}\n      {loading ? <p>loading</p> : <p>done</p>}\n      {isError}\n      {/* {data?`Login ok ${data.addUser.response}\"`:\"\"} */}\n\n      <Link to=\"/signup\">Don t have an account?</Link>\n    </>\n  );\n}\n\n\n\n\n\n\n\n\n//export let id;\n\n//function Login(props) {\n  //const [isLoggedIn, setLoggedIn] = useState(false);\n //const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n  //const [userName, setUserName] = useState(\"\");\n  //const [password, setPassword] = useState(\"\");\n  //const { setAuthTokens } = useAuth();\n  //const referer = props.location.state.referer || '/';\n//   const [idd ,setId] = useState(\"\");\n// id=idd;\n//   function postLogin() {\n    \n  //  let dat = {userName, password};\n  //   let x= Api(\"post\", \"i\", dat);\n  //   console.log(x);\n//     x.then(result => {console.log(result.status)\n//       if (result.status === 200) {console.log(\"status\")\n//         console.log(result.data+\"res.data\")\n//         setId(result.data[1]);\n//         setAuthTokens(result.data);\n//         setLoggedIn(true);\n//         console.log(\"id\", id)\n//       } else if (result.status === 401) {\n//         setIsError(true);\n//       }\n//     }).catch(e => {\n//      // setIsError(<Error>The username or password provided were incorrect!</Error>);\n      \n//     });\n//   }\n//   if (isError === true) {\n//     return <Redirect to={\"/\"} />;\n//   }\n//   if (isLoggedIn) {\n//     return <Redirect to={referer} />;\n//   }\n//   return (\n//     <Card>\n//       <Form>\n//         <Input\n//           type=\"username\"\n//           value={userName}\n//           onChange={e => {\n//             setUserName(e.target.value);\n//           }}\n//           placeholder=\"email\"\n//         />\n//         <Input\n//           type=\"password\"\n//           value={password}\n//           onChange={e => {\n//             setPassword(e.target.value);\n//           }}\n//           placeholder=\"password\"\n//         />\n//         <Button onClick={postLogin}>Sign In</Button>\n//       </Form>\n//       <Link to=\"/signup\">Don t have an account?</Link>\n//     {isError}\n//     </Card>\n//   );\n// }\n// //{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\n// export default Login;","/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/components/AuthForms.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Signup.js",[],"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/context/PrivateRoute.js",[],{"ruleId":"55","severity":1,"message":"56","line":1,"column":27,"nodeType":"57","messageId":"58","endLine":1,"endColumn":33},{"ruleId":"55","severity":1,"message":"59","line":1,"column":40,"nodeType":"57","messageId":"58","endLine":1,"endColumn":46},{"ruleId":null,"fatal":true,"severity":2,"message":"60","line":14,"column":32},{"ruleId":"55","severity":1,"message":"61","line":3,"column":16,"nodeType":"57","messageId":"58","endLine":3,"endColumn":24},{"ruleId":"55","severity":1,"message":"62","line":20,"column":10,"nodeType":"57","messageId":"58","endLine":20,"endColumn":20},{"ruleId":"55","severity":1,"message":"63","line":20,"column":22,"nodeType":"57","messageId":"58","endLine":20,"endColumn":33},{"ruleId":"55","severity":1,"message":"64","line":24,"column":10,"nodeType":"57","messageId":"58","endLine":24,"endColumn":13},{"ruleId":"55","severity":1,"message":"65","line":24,"column":15,"nodeType":"57","messageId":"58","endLine":24,"endColumn":20},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","Parsing error: Unexpected token, expected \";\"\n\n  12 | import PrivateRoute from \"./context/PrivateRoute\";\n  13 | \n> 14 | import Data from './route/Data');\n     |                                ^\n  15 | \n  16 | const RouteWithSubRoutes = require(\"./route/RouteWithSubRoutes\").default;\n  17 |","'Redirect' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'idd' is assigned a value but never used.","'setId' is assigned a value but never used."]