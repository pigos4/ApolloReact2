{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Home() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [inputsUser, setinputsUser] = useState({\n    id: \"36\",\n    name: \"\",\n    description: \"\",\n    extraInfo: \"\",\n    child: []\n  });\n  const [renderDataLoading, setrenderDataLoading] = useState(null);\n\n  function QueryRequest() {\n    _s();\n\n    const DATO = gql`\n  query dato($id: String) {\n    dato(id: $id) {\n      name\n      info\n      Description\n    }\n  }\n`;\n    const [getFields, {\n      loading,\n      data\n    }] = useLazyQuery(DATO);\n  }\n\n  _s(QueryRequest, \"+fxFAhDCP9BvyfcX7O73R/Bfm6Q=\", false, function () {\n    return [useLazyQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          name: e.target.value\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          description: e.target.value\n        }),\n        placeholder: \"Descriptio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          extraInfo: e.target.value\n        }),\n        placeholder: \"ExtraInfo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => getFields({\n        variables: {\n          id: inputsUser.id\n        }\n      }),\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), renderDataLoading]\n  }, void 0, true);\n}\n\n_s2(Home, \"+dVBsnGgxbaLU0DYbBf99tNOtzc=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","useLazyQuery","Home","inputsUser","setinputsUser","id","name","description","extraInfo","child","renderDataLoading","setrenderDataLoading","QueryRequest","DATO","getFields","loading","data","e","target","value","variables"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,YAA3B,QAA+C,gBAA/C;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC;AAC3CQ,IAAAA,EAAE,EAAE,IADuC;AAE3CC,IAAAA,IAAI,EAAE,EAFqC;AAG3CC,IAAAA,WAAW,EAAE,EAH8B;AAI3CC,IAAAA,SAAS,EAAE,EAJgC;AAK3CC,IAAAA,KAAK,EAAE;AALoC,GAAD,CAA5C;AAOA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,IAAD,CAA1D;;AAEF,WAASe,YAAT,GAAuB;AAAA;;AAErB,UAAMC,IAAI,GAAGd,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARE;AASF,UAAM,CAACe,SAAD,EAAY;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAZ,IAAiCf,YAAY,CAACY,IAAD,CAAnD;AAIC;;AAzB8B,KAUtBD,YAVsB;AAAA,YAqBQX,YArBR;AAAA;;AAuC7B,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGgB,CAAD,IACRb,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBG,UAAAA,IAAI,EAAEW,CAAC,CAACC,MAAF,CAASC;AAAhC,SAAD,CAHjB;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGF,CAAD,IACRb,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBI,UAAAA,WAAW,EAAEU,CAAC,CAACC,MAAF,CAASC;AAAvC,SAAD,CAHjB;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGF,CAAD,IACRb,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBK,UAAAA,SAAS,EAAES,CAAC,CAACC,MAAF,CAASC;AAArC,SAAD,CAHjB;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAML,SAAS,CAAC;AAAEM,QAAAA,SAAS,EAAE;AAAEf,UAAAA,EAAE,EAAEF,UAAU,CAACE;AAAjB;AAAb,OAAD,CAF1B;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAxBF,EA6BGK,iBA7BH;AAAA,kBADF;AAiCD;;IAxEuBR,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nexport default function Home() {\n  const [inputsUser, setinputsUser] = useState({\n    id: \"36\",\n    name: \"\",\n    description: \"\",\n    extraInfo: \"\",\n    child: [],\n  });\n  const [renderDataLoading, setrenderDataLoading] = useState(null);\n\nfunction QueryRequest(){\n  \n  const DATO = gql`\n  query dato($id: String) {\n    dato(id: $id) {\n      name\n      info\n      Description\n    }\n  }\n`;\nconst [getFields, { loading, data }] = useLazyQuery(DATO);\n\n\n\n}\n\n\n\n\n\n  \n\n  \n  \n\n  \n  \n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, name: e.target.value })\n          }\n          placeholder=\"Name\"\n        ></input>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, description: e.target.value })\n          }\n          placeholder=\"Descriptio\"\n        ></input>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, extraInfo: e.target.value })\n          }\n          placeholder=\"ExtraInfo\"\n        ></input>\n      </div>\n      <input\n        type=\"button\"\n        onClick={() => getFields({ variables: { id: inputsUser.id } })}\n        value=\"Submit\"\n      ></input>\n      {renderDataLoading}\n    </>\n  );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}