{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Card, Form, Input, Button\n/*Error*/\n} from \"../components/AuthForms\";\nimport { useAuth } from \"./context/auth\";\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!, ) {\n    loginUser(  username: $username, password:$password) {\n      id:String,\n      username:String,\n      status:String\n    }\n  }\n`;\nexport default function Login(props) {\n  _s();\n\n  const [loginUser, {\n    data,\n    loading\n  }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({\n    name: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Insert Username and password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 42\n  }, this));\n  const {\n    setAuthTokens\n  } = useAuth();\n  const referer = props.location.state.referer || '/';\n  const [idd, setId] = useState(\"\");\n\n  if (result.status === 200) {\n    console.log(\"status\");\n    console.log(result.data + \"res.data\");\n    setId(result.data[1]);\n    setAuthTokens(result.data);\n    setLoggedIn(true);\n    console.log(\"id\", id);\n  } else if (result.status === 401) {\n    setIsError(true);\n  }\n\n  if (isError === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: referer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setUserLogin({\n        \"name\": e.target.value,\n        \"username\": user.username,\n        \"password\": user.password\n      }),\n      placeholder: \"nome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        setUserLogin({\n          \"name\": user.name,\n          \"username\": e.target.value,\n          \"password\": user.password\n        });\n      },\n      placeholder: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: e => {\n        setUserLogin({\n          \"name\": user.name,\n          \"username\": user.username,\n          \"password\": e.target.value\n        });\n      },\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"submit\",\n      onClick: () => {\n        loginUser({\n          variables: user\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => console.log(data),\n      value: \"consolelog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), user.name, user.username, user.password, loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 35\n    }, this), data ? `Login ok ${data.addUser.response}\"` : \"\", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \"Don t have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} //export let id;\n//function Login(props) {\n//const [isLoggedIn, setLoggedIn] = useState(false);\n//const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n//const [userName, setUserName] = useState(\"\");\n//const [password, setPassword] = useState(\"\");\n//const { setAuthTokens } = useAuth();\n//const referer = props.location.state.referer || '/';\n//   const [idd ,setId] = useState(\"\");\n// id=idd;\n//   function postLogin() {\n//  let dat = {userName, password};\n//   let x= Api(\"post\", \"i\", dat);\n//   console.log(x);\n//     x.then(result => {console.log(result.status)\n//       if (result.status === 200) {console.log(\"status\")\n//         console.log(result.data+\"res.data\")\n//         setId(result.data[1]);\n//         setAuthTokens(result.data);\n//         setLoggedIn(true);\n//         console.log(\"id\", id)\n//       } else if (result.status === 401) {\n//         setIsError(true);\n//       }\n//     }).catch(e => {\n//      // setIsError(<Error>The username or password provided were incorrect!</Error>);\n//     });\n//   }\n//   if (isError === true) {\n//     return <Redirect to={\"/\"} />;\n//   }\n//   if (isLoggedIn) {\n//     return <Redirect to={referer} />;\n//   }\n//   return (\n//     <Card>\n//       <Form>\n//         <Input\n//           type=\"username\"\n//           value={userName}\n//           onChange={e => {\n//             setUserName(e.target.value);\n//           }}\n//           placeholder=\"email\"\n//         />\n//         <Input\n//           type=\"password\"\n//           value={password}\n//           onChange={e => {\n//             setPassword(e.target.value);\n//           }}\n//           placeholder=\"password\"\n//         />\n//         <Button onClick={postLogin}>Sign In</Button>\n//       </Form>\n//       <Link to=\"/signup\">Don t have an account?</Link>\n//     {isError}\n//     </Card>\n//   );\n// }\n// //{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\n// export default Login;\n\n_s(Login, \"SorIEOgxoAAuyxo8mE8Y6MMMZzk=\", false, function () {\n  return [useMutation, useAuth];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js"],"names":["React","useState","gql","useMutation","Link","Redirect","Card","Form","Input","Button","useAuth","LOGIN_USER","Login","props","loginUser","data","loading","user","setUserLogin","name","username","password","isLoggedIn","setLoggedIn","isError","setIsError","setAuthTokens","referer","location","state","idd","setId","result","status","console","log","id","e","target","value","variables","addUser","response"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Card, Form, Input, Button, /*Error*/ } from \"../components/AuthForms\";\nimport { useAuth } from \"./context/auth\";\n\n\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!, ) {\n    loginUser(  username: $username, password:$password) {\n      id:String,\n      username:String,\n      status:String\n    }\n  }\n`;\nexport default function Login(props) {\n  const [loginUser, { data, loading }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({name: \"\",  username: \"\",  password: \"\",});\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n  const { setAuthTokens } = useAuth();\n  const referer = props.location.state.referer || '/';\n  const [idd ,setId] = useState(\"\");\n\n  if (result.status === 200) {console.log(\"status\")\n  console.log(result.data+\"res.data\")\n  setId(result.data[1]);\n  setAuthTokens(result.data);\n  setLoggedIn(true);\n  console.log(\"id\", id)\n} else if (result.status === 401) {\n  setIsError(true);\n}\n\nif (isError === true) {\n  return <Redirect to={\"/\"} />;\n}\nif (isLoggedIn) {\n  return <Redirect to={referer} />;\n}\n\n\n\n  return (\n    <>\n      <input type=\"text\" onChange={(e) => setUserLogin({\"name\":e.target.value,\"username\":user.username,\"password\":user.password})}placeholder=\"nome\"></input>\n      <input type=\"text\" onChange={(e)=>{setUserLogin({\"name\":user.name,\"username\":e.target.value,\"password\":user.password})}}placeholder=\"username\"></input>\n      <input type=\"password\" onChange={(e)=>{setUserLogin({\"name\":user.name,\"username\":user.username,\"password\":e.target.value})}} placeholder=\"password\"></input>\n      <input type=\"button\" value=\"submit\" onClick={() => { loginUser({ variables: user  });}}></input>\n      \n      <input\n        type=\"button\"\n        onClick={() => console.log(data)} value=\"consolelog\"\n      ></input>{user.name}{user.username}{user.password}\n      {loading ? <p>loading</p> : <p>done</p>}\n      {data?`Login ok ${data.addUser.response}\"`:\"\"}\n\n      <Link to=\"/signup\">Don t have an account?</Link>\n    </>\n  );\n}\n\n\n\n\n\n\n\n\n//export let id;\n\n//function Login(props) {\n  //const [isLoggedIn, setLoggedIn] = useState(false);\n //const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n  //const [userName, setUserName] = useState(\"\");\n  //const [password, setPassword] = useState(\"\");\n  //const { setAuthTokens } = useAuth();\n  //const referer = props.location.state.referer || '/';\n//   const [idd ,setId] = useState(\"\");\n// id=idd;\n//   function postLogin() {\n    \n  //  let dat = {userName, password};\n  //   let x= Api(\"post\", \"i\", dat);\n  //   console.log(x);\n//     x.then(result => {console.log(result.status)\n//       if (result.status === 200) {console.log(\"status\")\n//         console.log(result.data+\"res.data\")\n//         setId(result.data[1]);\n//         setAuthTokens(result.data);\n//         setLoggedIn(true);\n//         console.log(\"id\", id)\n//       } else if (result.status === 401) {\n//         setIsError(true);\n//       }\n//     }).catch(e => {\n//      // setIsError(<Error>The username or password provided were incorrect!</Error>);\n      \n//     });\n//   }\n//   if (isError === true) {\n//     return <Redirect to={\"/\"} />;\n//   }\n//   if (isLoggedIn) {\n//     return <Redirect to={referer} />;\n//   }\n//   return (\n//     <Card>\n//       <Form>\n//         <Input\n//           type=\"username\"\n//           value={userName}\n//           onChange={e => {\n//             setUserName(e.target.value);\n//           }}\n//           placeholder=\"email\"\n//         />\n//         <Input\n//           type=\"password\"\n//           value={password}\n//           onChange={e => {\n//             setPassword(e.target.value);\n//           }}\n//           placeholder=\"password\"\n//         />\n//         <Button onClick={postLogin}>Sign In</Button>\n//       </Form>\n//       <Link to=\"/signup\">Don t have an account?</Link>\n//     {isError}\n//     </Card>\n//   );\n// }\n// //{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\n// export default Login;"]},"metadata":{},"sourceType":"module"}