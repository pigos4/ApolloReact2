{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/RouteWithSubRoutes.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"../context/PrivateRoute\";\nexport default function RouteWithSubRoutes(route) {\n  // if (route.private === \"yes\") {\n  //   console.log(route);\n  //   return (<Route\n  //     path={route.path}\n  //     render={(props) => (\n  //       // pass the sub-routes down to keep nesting\n  //       <PrivateRoute {...props} routes={route.routes} />\n  //     )}\n  //   />\n  //   )\n  // }else{\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: props =>\n    /*#__PURE__*/\n    // pass the sub-routes down to keep nesting\n    _jsxDEV(route.component, { ...props,\n      routes: route.routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = RouteWithSubRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteWithSubRoutes\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/RouteWithSubRoutes.js"],"names":["BrowserRouter","Router","Route","Switch","PrivateRoute","RouteWithSubRoutes","route","path","props","routes"],"mappings":";;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAiCC,KAAjC,EAAuCC,MAAvC,QAAqD,kBAArD;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAGA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACC,IADd;AAEE,IAAA,MAAM,EAAGC,KAAD;AAAA;AACN;AACA,YAAC,KAAD,CAAO,SAAP,OAAqBA,KAArB;AAA4B,MAAA,MAAM,EAAEF,KAAK,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;KAxBuBJ,kB","sourcesContent":["import { BrowserRouter as Router,Route,Switch } from \"react-router-dom\";\nimport PrivateRoute from \"../context/PrivateRoute\";\n\n\nexport default function RouteWithSubRoutes(route) {\n\n  // if (route.private === \"yes\") {\n  //   console.log(route);\n  //   return (<Route\n  //     path={route.path}\n  //     render={(props) => (\n  //       // pass the sub-routes down to keep nesting\n  //       <PrivateRoute {...props} routes={route.routes} />\n  //     )}\n  //   />\n    \n    \n  //   )\n  // }else{\n  return (\n    <Route\n      path={route.path}\n      render={(props) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}