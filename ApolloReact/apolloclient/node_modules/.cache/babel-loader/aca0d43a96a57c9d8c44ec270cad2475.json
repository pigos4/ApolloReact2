{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Card, Form, Input, Button\n/*Error*/\n} from \"../components/AuthForms\";\nimport { useAuth } from \"./context/auth\";\nimport Api from '../link/api/api';\nexport let id;\n\nfunction Login(props) {\n  _s();\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Insert Username and password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 42\n  }, this));\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthTokens\n  } = useAuth();\n  const referer = props.location.state.referer || '/';\n  const [idd, setId] = useState(\"\");\n  id = idd;\n\n  function postLogin() {\n    let dat = {\n      userName,\n      password\n    };\n    let x = Api(\"post\", \"i\", dat);\n    console.log(x);\n    x.then(result => {\n      console.log(result.status);\n\n      if (result.status === 200) {\n        console.log(\"status\");\n        console.log(result.data + \"res.data\");\n        setId(result.data[1]);\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n        console.log(\"id\", id);\n      } else if (result.status === 401) {\n        setIsError(true);\n      }\n    }).catch(e => {// setIsError(<Error>The username or password provided were incorrect!</Error>);\n    });\n  }\n\n  if (isError === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: referer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"username\",\n        value: userName,\n        onChange: e => {\n          setUserName(e.target.value);\n        },\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: postLogin,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \"Don t have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), isError]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n} //{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\n\n\n_s(Login, \"paZMitK5pLm6TvMsl9O74uDVqMw=\", false, function () {\n  return [useAuth];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js"],"names":["React","useState","gql","useMutation","Link","Redirect","Card","Form","Input","Button","useAuth","Api","id","Login","props","isLoggedIn","setLoggedIn","isError","setIsError","userName","setUserName","password","setPassword","setAuthTokens","referer","location","state","idd","setId","postLogin","dat","x","console","log","then","result","status","data","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Card, Form, Input, Button, /*Error*/ } from \"../components/AuthForms\";\nimport { useAuth } from \"./context/auth\";\nimport Api from '../link/api/api';\n\nexport let id;\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n  const referer = props.location.state.referer || '/';\n  const [idd ,setId] = useState(\"\");\nid=idd;\n  function postLogin() {\n    \n   let dat = {userName, password};\n    let x= Api(\"post\", \"i\", dat);\n    console.log(x);\n    x.then(result => {console.log(result.status)\n      if (result.status === 200) {console.log(\"status\")\n        console.log(result.data+\"res.data\")\n        setId(result.data[1]);\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n        console.log(\"id\", id)\n      } else if (result.status === 401) {\n        setIsError(true);\n      }\n    }).catch(e => {\n     // setIsError(<Error>The username or password provided were incorrect!</Error>);\n      \n    });\n  }\n  if (isError === true) {\n    return <Redirect to={\"/\"} />;\n  }\n  if (isLoggedIn) {\n    return <Redirect to={referer} />;\n  }\n  return (\n    <Card>\n      <Form>\n        <Input\n          type=\"username\"\n          value={userName}\n          onChange={e => {\n            setUserName(e.target.value);\n          }}\n          placeholder=\"email\"\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={e => {\n            setPassword(e.target.value);\n          }}\n          placeholder=\"password\"\n        />\n        <Button onClick={postLogin}>Sign In</Button>\n      </Form>\n      <Link to=\"/signup\">Don t have an account?</Link>\n    {isError}\n    </Card>\n  );\n}\n//{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\nexport default Login;"]},"metadata":{},"sourceType":"module"}