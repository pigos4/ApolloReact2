{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/List.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Scanner from \"./components/Scanner\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./styles.css\";\nexport default function List() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [camera, setCamera] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const onDetected = result => {\n    setResult(result);\n  };\n\n  function AddRecord() {\n    _s();\n\n    const ADD_INPUT = gql`\n      mutation($name: String!, $price: Int!, $barcode: String!) {\n        addInput(name: $name, price: $price, barcode: $barcode) {\n          response\n        }\n      }\n    `;\n    const [addInput, {\n      data\n    }] = useMutation(ADD_INPUT);\n    const [inputName, setinputName] = useState({\n      name: \"\",\n      price: 0,\n      barcode: result\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Add the name and the price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputName({\n          name: e.target.value,\n          price: inputName.price,\n          barcode: result\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setinputName({\n          name: inputName.name,\n          price: parseInt(e.target.value),\n          barcode: result\n        }),\n        placeholder: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => addInput({\n          variables: inputName\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), data ? data.addInput.response === \"added\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this) : \"error\" : NaN]\n    }, void 0, true);\n  }\n\n  _s(AddRecord, \"3+3StxAs3Obpks32jFSOGtv712o=\", false, function () {\n    return [useMutation];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Save your products. To start scann your barcode\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result ? result : \"Scanning...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCamera(!camera),\n      children: camera ? \"Stop\" : \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: camera && /*#__PURE__*/_jsxDEV(Scanner, {\n        onDetected: onDetected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), result !== null ? /*#__PURE__*/_jsxDEV(AddRecord, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 26\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(List, \"eG6lp+lZyYhs06v4FOVlOF4izXQ=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/List.js"],"names":["React","useState","Scanner","gql","useMutation","Redirect","List","camera","setCamera","result","setResult","onDetected","AddRecord","ADD_INPUT","addInput","data","inputName","setinputName","name","price","barcode","e","target","value","parseInt","variables","response","NaN"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Scanner from \"./components/Scanner\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport { Redirect } from \"react-router-dom\";\nimport \"./styles.css\";\n\nexport default function List() {\n  const [camera, setCamera] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const onDetected = (result) => {\n    setResult(result);\n  };\n\n  function AddRecord() {\n    const ADD_INPUT = gql`\n      mutation($name: String!, $price: Int!, $barcode: String!) {\n        addInput(name: $name, price: $price, barcode: $barcode) {\n          response\n        }\n      }\n    `;\n\n    const [addInput, { data }] = useMutation(ADD_INPUT);\n\n    const [inputName, setinputName] = useState({\n      name: \"\",\n      price: 0,\n      barcode: result,\n    });\n\n    return (\n      <>\n        Add the name and the price:\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputName({\n              name: e.target.value,\n              price: inputName.price,\n              barcode: result,\n            })\n          }\n          placeholder=\"Name\"\n        ></input>\n        <input\n          type=\"number\"\n          onChange={(e) =>\n            setinputName({\n              name: inputName.name,\n              price: parseInt(e.target.value),\n              barcode: result,\n            })\n          }\n          placeholder=\"Price\"\n        ></input>\n        <input\n          type=\"submit\"\n          onClick={() => addInput({ variables: inputName })}\n        ></input>\n        {data ? (\n          data.addInput.response === \"added\" ? (\n            <Redirect to=\"records\" />\n          ) : (\n            \"error\"\n          )\n        ) : (\n          NaN\n        )}\n      </>\n    );\n  }\n  return (\n    <div className=\"App\">\n      Save your products. To start scann your barcode\n      <p>{result ? result : \"Scanning...\"}</p>\n      <button onClick={() => setCamera(!camera)}>\n        {camera ? \"Stop\" : \"Start\"}\n      </button>\n      <div className=\"container\">\n        {camera && <Scanner onDetected={onDetected} />}\n      </div>\n      {result !== null ? <AddRecord /> : \"\"}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}