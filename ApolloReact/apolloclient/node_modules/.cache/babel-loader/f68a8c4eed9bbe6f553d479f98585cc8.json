{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apolloreact/apolloclient/src/graphql/mutation/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nconst ADD_USER = gql`\n  mutation($id: ID, $name: String!, $username: String!, $email: String!) {\n    addUser(id: $id, name: $name, username: $username, email: $email) {\n      id\n      name\n      username\n      email\n    }\n  }\n`;\nexport default function Mut() {\n  _s();\n\n  const [addUser, {\n    data,\n    loading\n  }] = useMutation(ADD_USER);\n  const [user, setUser] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setUser(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onchange: e => {\n        set;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      placeholder: \"submit\",\n      onClick: () => {\n        addUser({\n          variables: {\n            id: \"1\",\n            name: \"daniel\",\n            username: \"pigos\",\n            email: \"pss\"\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => console.log(data.addUser, \"data\", loading, \"x\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Mut, \"sNbTZPooL+Oac8agE6uzGDXy5KU=\", false, function () {\n  return [useMutation];\n});\n\n_c = Mut;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mut\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apolloreact/apolloclient/src/graphql/mutation/Signup.js"],"names":["React","useState","gql","useMutation","ADD_USER","Mut","addUser","data","loading","user","setUser","e","target","value","set","variables","id","name","username","email","console","log"],"mappings":";;;;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AAEA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAe,SAASG,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAU;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAV,IAA+BL,WAAW,CAACC,QAAD,CAAhD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGU,CAAD,IAAOD,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGF,CAAD,IAAK;AAACG,QAAAA,GAAG;AAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,IAAI,EAAC,QADP;AAGE,MAAA,WAAW,EAAC,QAHd;AAIE,MAAA,OAAO,EAAE,MAAM;AACbR,QAAAA,OAAO,CAAC;AACNS,UAAAA,SAAS,EAAE;AACTC,YAAAA,EAAE,EAAE,GADK;AAETC,YAAAA,IAAI,EAAE,QAFG;AAGTC,YAAAA,QAAQ,EAAE,OAHD;AAITC,YAAAA,KAAK,EAAE;AAJE;AADL,SAAD,CAAP;AAQD;AAbH;AAAA;AAAA;AAAA;AAAA,YAHF,eAkBE;AAAA,gBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAME,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACD,OAAjB,EAA0B,MAA1B,EAAkCE,OAAlC,EAA2C,GAA3C;AAFjB;AAAA;AAAA;AAAA;AAAA,YAnBF,EAuBGA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvB9B;AAAA,kBADF;AA2BD;;GA/BuBH,G;UACeF,W;;;KADfE,G","sourcesContent":["import { React, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst ADD_USER = gql`\n  mutation($id: ID, $name: String!, $username: String!, $email: String!) {\n    addUser(id: $id, name: $name, username: $username, email: $email) {\n      id\n      name\n      username\n      email\n    }\n  }\n`;\n\nexport default function Mut() {\n  const [addUser, { data, loading }] = useMutation(ADD_USER);\n  const [user, setUser] = useState(\"\");\n\n  return (\n    <>\n      <input type=\"text\" onChange={(e) => setUser(e.target.value)}></input>\n      <input type=\"text\" onchange={(e)=>{set}}></input>\n      <input\n        type=\"button\"\n        \n        placeholder=\"submit\"\n        onClick={() => {\n          addUser({\n            variables: {\n              id: \"1\",\n              name: \"daniel\",\n              username: \"pigos\",\n              email: \"pss\",\n            },\n          });\n        }}\n      ></input>\n      <div>{username}</div>\n      <input\n        type=\"button\"\n        onClick={() => console.log(data.addUser, \"data\", loading, \"x\")}\n      ></input>\n      {loading ? <p>loading</p> : <p>done</p>}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}