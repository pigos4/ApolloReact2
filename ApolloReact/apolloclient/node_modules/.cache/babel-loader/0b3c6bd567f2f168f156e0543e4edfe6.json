{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\n\nfunction Delete(props) {\n  _s();\n\n  c;\n  const DELETE_ITEM = gql`\n  mutation($idd: String!) {\n    deleteitem(idd: $idd) {\n    \n      status\n    }\n  }\n`;\n  const [deletionStatus, {\n    data,\n    loading\n  }] = useMutation(DELETE_ITEM);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => deletionStatus({\n        variables: props.id\n      }),\n      value: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Delete, \"kFWxIz4tvB6uOIfxsNtF7hhDV0Q=\", false, function () {\n  return [useMutation];\n});\n\n_c = Delete;\nconst RECORDS = gql`\n  query{records{nome\n  id\n  price\n  barcode\n  }}\n`;\nexport default function Records() {\n  _s2();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(RECORDS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  if (data) console.log(data);\n  return data.records.map(res => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(Delete, {\n      id: res.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \"nome:\", res.nome, \"id:\", res.id, \"Price:\", res.price, \" Barcode:\", res.barcode]\n  }, res.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this));\n}\n\n_s2(Records, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Records;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Delete\");\n$RefreshReg$(_c2, \"Records\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js"],"names":["useQuery","gql","useMutation","Delete","props","c","DELETE_ITEM","deletionStatus","data","loading","console","log","variables","id","RECORDS","Records","error","records","map","res","nome","price","barcode"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,EAAuBC,WAAvB,QAA0C,gBAA1C;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAAA;;AACpBC,EAAAA,CAAC;AACD,QAAMC,WAAW,GAAGL,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPE;AAUF,QAAM,CAACM,cAAD,EAAiB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB,IAAsCP,WAAW,CAACI,WAAD,CAAvD;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAaH,IAAb;AACE,sBAEE;AAAA,2BACA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAE,MAAID,cAAc,CAAE;AAAEK,QAAAA,SAAS,EAAER,KAAK,CAACS;AAAnB,OAAF,CAAhD;AAA6E,MAAA,KAAK,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA;AADA,mBAFF;AAMD;;GArBQV,M;UAYmCD,W;;;KAZnCC,M;AA0BT,MAAMW,OAAO,GAAGb,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAe,SAASc,OAAT,GAAmB;AAAA;;AAChC,QAAM;AAAEN,IAAAA,OAAF;AAAWO,IAAAA,KAAX;AAAkBR,IAAAA;AAAlB,MAA2BR,QAAQ,CAACc,OAAD,CAAzC;AACA,MAAIL,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIO,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAGR,IAAH,EAASE,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACT,SAAOA,IAAI,CAACS,OAAL,CAAaC,GAAb,CAAkBC,GAAD,iBACtB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAEA,GAAG,CAACN;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,WAC6BM,GAAG,CAACC,IADjC,SAEQD,GAAG,CAACN,EAFZ,YAGSM,GAAG,CAACE,KAHb,eAG6BF,GAAG,CAACG,OAHjC;AAAA,KAAQH,GAAG,CAACN,EAAZ;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD;;IAZuBE,O;UACWf,Q;;;MADXe,O","sourcesContent":["import { useQuery, gql,useMutation } from \"@apollo/client\";\n\n\nfunction Delete(props){\n  c\n  const DELETE_ITEM = gql`\n  mutation($idd: String!) {\n    deleteitem(idd: $idd) {\n    \n      status\n    }\n  }\n`;\n\n\nconst [deletionStatus, { data, loading }] = useMutation(DELETE_ITEM);\n\nconsole.log( data)\n  return (\n\n    <>\n    <input type=\"button\" onClick={()=>deletionStatus(({ variables: props.id }))} value=\"Delete\"></input>\n    </>\n  )\n}\n\n\n\n\nconst RECORDS = gql`\n  query{records{nome\n  id\n  price\n  barcode\n  }}\n`;\n\nexport default function Records() {\n  const { loading, error, data } = useQuery(RECORDS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  if(data )console.log(data);\n  return data.records.map((res) => (\n    <p key={res.id}>\n      <Delete id={res.id}/>nome:{res.nome} \n        id:{res.id}\n      Price:{res.price} Barcode:{res.barcode}\n    </p>\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}