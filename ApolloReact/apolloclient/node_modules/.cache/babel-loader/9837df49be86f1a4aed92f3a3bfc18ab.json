{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato/DatoIdToRender.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Dato() {\n  var _s = $RefreshSig$();\n\n  function IdToRender(prop) {\n    _s();\n\n    console.log(prop, \"propssssss\");\n    const DATO = gql`\n          query dato($id: String) {\n            dato(id: $id) {\n              name\n              info\n              Description\n              father\n              child {\n                ID\n                Name\n              }\n            }\n          }\n        `;\n    const [getFields, {\n      loading,\n      data\n    }] = useLazyQuery(DATO);\n    useEffect(() => {\n      getFields({\n        variables: {\n          id: prop.id\n        }\n      });\n\n      if (data) {\n        console.log(data);\n        setfunctionToRender( /*#__PURE__*/_jsxDEV(Funct, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }, this));\n      }\n    }, [data, getFields]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: functionToRender\n    }, void 0, false);\n  }\n\n  _s(IdToRender, \"Vq6BOzVrwLDs6r8lPcf/5bqzH0M=\", false, function () {\n    return [useLazyQuery];\n  });\n}\n_c = Dato;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dato\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato/DatoIdToRender.js"],"names":["React","useState","useEffect","gql","useMutation","useLazyQuery","Dato","IdToRender","prop","console","log","DATO","getFields","loading","data","variables","id","setfunctionToRender","functionToRender"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,YAA3B,QAA+C,gBAA/C;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AAAA;;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAiB,YAAjB;AACA,UAAMG,IAAI,GAAGR,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAbQ;AAcA,UAAM,CAACS,SAAD,EAAY;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAZ,IAAiCT,YAAY,CAACM,IAAD,CAAnD;AACAT,IAAAA,SAAS,CAAC,MAAM;AACdU,MAAAA,SAAS,CAAC;AAAEG,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAER,IAAI,CAACQ;AAAX;AAAb,OAAD,CAAT;;AAEA,UAAIF,IAAJ,EAAU;AACRL,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAG,QAAAA,mBAAmB,eAAC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEH;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAnB;AACD;AACF,KAPQ,EAON,CAACA,IAAD,EAAOF,SAAP,CAPM,CAAT;AAQA,wBAAO;AAAA,gBAAGM;AAAH,qBAAP;AACD;;AA5BwB,KAElBX,UAFkB;AAAA,YAkBgBF,YAlBhB;AAAA;AAiC9B;KAjCuBC,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Dato() {\n\n    function IdToRender(prop) {\n        console.log(prop,\"propssssss\")\n        const DATO = gql`\n          query dato($id: String) {\n            dato(id: $id) {\n              name\n              info\n              Description\n              father\n              child {\n                ID\n                Name\n              }\n            }\n          }\n        `;\n        const [getFields, { loading, data }] = useLazyQuery(DATO);\n        useEffect(() => {\n          getFields({ variables: { id: prop.id } });\n         \n          if (data) {\n            console.log(data);\n            setfunctionToRender(<Funct data={data} />);\n          }\n        }, [data, getFields]);\n        return <>{functionToRender}</>;\n      }\n    \n      \n\n\n}"]},"metadata":{},"sourceType":"module"}