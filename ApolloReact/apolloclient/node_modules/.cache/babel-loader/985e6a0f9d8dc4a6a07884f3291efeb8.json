{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\"; // const DATA_INPUT = gql`\n// mutation($username: String!, $password: String!, ) {\n//   loginUser(  username: $username, password:$password) {\n//     id,\n//     username,\n//     status\n//   }\n// }\n// `;\n\nconst dat = [{\n  id: 1,\n  name: \"javascript\",\n  moreData: \"more info\",\n  children: [101, 102]\n}, {\n  id: 101,\n  name: \"Array\",\n  moreData: \"aaarraaayy\",\n  children: [103, 104]\n}, {\n  id: 102,\n  name: \"Object\",\n  moreData: \"ooobbbjjject\",\n  children: [105, 106]\n}, {\n  id: 103,\n  name: \"Arrayspec1\",\n  moreData: \"aaarraaayy\",\n  children: [101, 102]\n}, {\n  id: 104,\n  name: \"Arrayspec2\",\n  moreData: \"ooobbbjjject\",\n  children: [101, 102]\n}, {\n  id: 105,\n  name: \"objectspec1\",\n  moreData: \"aaarraaayy\",\n  children: [101, 102]\n}, {\n  id: 106,\n  name: \"Objectspec2\",\n  moreData: \"ooobbbjjject\",\n  children: [101, 102]\n}];\n\nfunction buttonNameFromArray(id) {\n  let obj = dat.find(x => x.id === id);\n  console.log(obj);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"button\",\n    value: obj.name\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\nfunction CreateRender(props) {\n  console.log(props.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"nome madre:\", dat[props.id].name, \" figli:\", dat[props.id].children.map(x => buttonNameFromArray(x))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = CreateRender;\nexport default function Home() {\n  //const [dataInput, { data, loading }] = useMutation(DATA_INPUT);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"wee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateRender, {\n      id: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateRender\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","dat","id","name","moreData","children","buttonNameFromArray","obj","find","x","console","log","CreateRender","props","map","Home"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAG,CACV;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,YAAf;AAA6BC,EAAAA,QAAQ,EAAE,WAAvC;AAAoDC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAA9D,CADU,EAEV;AAAEH,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,OAAjB;AAA0BC,EAAAA,QAAQ,EAAE,YAApC;AAAkDC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAA5D,CAFU,EAGV;AAAEH,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,QAAjB;AAA2BC,EAAAA,QAAQ,EAAE,cAArC;AAAqDC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAA/D,CAHU,EAKV;AAAEH,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,YAAjB;AAA+BC,EAAAA,QAAQ,EAAE,YAAzC;AAAuDC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAAjE,CALU,EAMV;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,QAAQ,EAAE,cAHZ;AAIEC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJZ,CANU,EAaV;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,QAAQ,EAAE,YAHZ;AAIEC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJZ,CAbU,EAmBV;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,QAAQ,EAAE,cAHZ;AAIEC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJZ,CAnBU,CAAZ;;AA0BA,SAASC,mBAAT,CAA6BJ,EAA7B,EAAiC;AAC/B,MAAIK,GAAG,GAAGN,GAAG,CAACO,IAAJ,CAAUC,CAAD,IAAOA,CAAC,CAACP,EAAF,KAASA,EAAzB,CAAV;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,sBAAO;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEA,GAAG,CAACJ;AAAhC,KAA2CI,GAAG,CAACL,EAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,SAASU,YAAT,CAAsBC,KAAtB,EAA6B;AACzBH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACX,EAAlB;AACF,sBACE;AAAA,2BACE;AAAA,gCACcD,GAAG,CAACY,KAAK,CAACX,EAAP,CAAH,CAAcC,IAD5B,aAEGF,GAAG,CAACY,KAAK,CAACX,EAAP,CAAH,CAAcG,QAAd,CAAuBS,GAAvB,CAA4BL,CAAD,IAAOH,mBAAmB,CAACG,CAAD,CAArD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD;;KAVQG,Y;AAYT,eAAe,SAASG,IAAT,GAAgB;AAC7B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;MATuBA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\n// const DATA_INPUT = gql`\n// mutation($username: String!, $password: String!, ) {\n//   loginUser(  username: $username, password:$password) {\n//     id,\n//     username,\n//     status\n//   }\n// }\n// `;\nconst dat = [\n  { id: 1, name: \"javascript\", moreData: \"more info\", children: [101, 102] },\n  { id: 101, name: \"Array\", moreData: \"aaarraaayy\", children: [103, 104] },\n  { id: 102, name: \"Object\", moreData: \"ooobbbjjject\", children: [105, 106] },\n\n  { id: 103, name: \"Arrayspec1\", moreData: \"aaarraaayy\", children: [101, 102] },\n  {\n    id: 104,\n    name: \"Arrayspec2\",\n    moreData: \"ooobbbjjject\",\n    children: [101, 102],\n  },\n\n  {\n    id: 105,\n    name: \"objectspec1\",\n    moreData: \"aaarraaayy\",\n    children: [101, 102],\n  },\n  {\n    id: 106,\n    name: \"Objectspec2\",\n    moreData: \"ooobbbjjject\",\n    children: [101, 102],\n  },\n];\nfunction buttonNameFromArray(id) {\n  let obj = dat.find((x) => x.id === id);\n  console.log(obj);\n  return <input type=\"button\" value={obj.name} key={obj.id} ></input>;\n}\nfunction CreateRender(props) {\n    console.log(props.id)\n  return (\n    <>\n      <div>\n        nome madre:{dat[props.id].name} figli:\n        {dat[props.id].children.map((x) => buttonNameFromArray(x))}\n      </div>\n    </>\n  );\n}\n\nexport default function Home() {\n  //const [dataInput, { data, loading }] = useMutation(DATA_INPUT);\n\n  return (\n    <>\n      <div>wee</div>\n      <CreateRender id=\"0\"/>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}