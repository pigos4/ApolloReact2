{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\"; // const DATA_INPUT = gql`\n// mutation($username: String!, $password: String!, ) {\n//   loginUser(  username: $username, password:$password) {\n//     id,\n//     username,\n//     status\n//   }\n// }\n// `;\n\nconst dat = [{\n  id: 1,\n  name: \"javascript\",\n  moreData: \"more info\",\n  children: [101, 102]\n}, {\n  id: 101,\n  name: \"Array\",\n  moreData: \"aaarraaayy\",\n  children: [103, 104]\n}, {\n  id: 102,\n  name: \"Object\",\n  moreData: \"ooobbbjjject\",\n  children: [105, 106]\n}, {\n  id: 103,\n  name: \"Arrayspec1\",\n  moreData: \"aaarraaayy\",\n  children: [101, 102]\n}, {\n  id: 104,\n  name: \"Arrayspec2\",\n  moreData: \"ooobbbjjject\",\n  children: [101, 102]\n}, {\n  id: 105,\n  name: \"objectspec1\",\n  moreData: \"aaarraaayy\",\n  children: [101, 102]\n}, {\n  id: 106,\n  name: \"Objectspec2\",\n  moreData: \"ooobbbjjject\",\n  children: [101, 102]\n}];\n\nfunction buttonNameFromArray(id) {\n  let obj = dat.find(x => x.id === id);\n  console.log(obj);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"button\",\n    value: obj.name,\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 14\n  }, this);\n}\n\nfunction CreateRender() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" nome madre: \", dat[0].name, \"figli: \", dat[0].children.map(x => buttonNameFromArray(x))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n}\n\n_c = CreateRender;\nexport default function Home() {\n  //const [dataInput, { data, loading }] = useMutation(DATA_INPUT);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" wee \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(CreateRender, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateRender\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","dat","id","name","moreData","children","buttonNameFromArray","obj","find","x","console","log","CreateRender","map","Home"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,QAGO,OAHP;AAIA,SACIC,GADJ,EAEIC,WAFJ,QAGO,gBAHP,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAG,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELC,EAAAA,IAAI,EAAE,YAFD;AAGLC,EAAAA,QAAQ,EAAE,WAHL;AAILC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJL,CAAD,EAMR;AACIH,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,QAAQ,EAAE,YAHd;AAIIC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJd,CANQ,EAYR;AACIH,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,QAFV;AAGIC,EAAAA,QAAQ,EAAE,cAHd;AAIIC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJd,CAZQ,EAmBR;AACIH,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,YAFV;AAGIC,EAAAA,QAAQ,EAAE,YAHd;AAIIC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJd,CAnBQ,EAyBR;AACIH,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,YAFV;AAGIC,EAAAA,QAAQ,EAAE,cAHd;AAIIC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJd,CAzBQ,EAgCR;AACIH,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,aAFV;AAGIC,EAAAA,QAAQ,EAAE,YAHd;AAIIC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJd,CAhCQ,EAsCR;AACIH,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE,aAFV;AAGIC,EAAAA,QAAQ,EAAE,cAHd;AAIIC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN;AAJd,CAtCQ,CAAZ;;AAgDA,SAASC,mBAAT,CAA6BJ,EAA7B,EAAiC;AAE7B,MAAIK,GAAG,GAAGN,GAAG,CAACO,IAAJ,CAASC,CAAC,IAAIA,CAAC,CAACP,EAAF,KAASA,EAAvB,CAAV;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,sBAAS;AAAQ,IAAA,IAAI,EAAG,QAAf;AACL,IAAA,KAAK,EACDA,GAAG,CAACJ,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAKC;;AAED,SAASS,YAAT,GAAwB;AAGpB,sBAAS;AAAA,iCAAI;AAAA,kCACLX,GAAG,CAAC,CAAD,CAAH,CAAOE,IADF,aAILF,GAAG,CAAC,CAAD,CAAH,CAAOI,QAAP,CAAgBQ,GAAhB,CAAqBJ,CAAD,IAAOH,mBAAmB,CAACG,CAAD,CAA9C,CAJK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA,kBAAT;AAeH;;KAlBQG,Y;AAsBT,eAAe,SAASE,IAAT,GAAgB;AAE3B;AAEA,sBAEI;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,yBAC2B,QAC3B,YAD2B;AAAA;AAAA;AAAA;AAAA,YAD3B;AAAA,kBAFJ;AAQC;MAZmBA,I","sourcesContent":["import React, {\n    useState,\n    useEffect\n} from \"react\";\nimport {\n    gql,\n    useMutation\n} from \"@apollo/client\";\n\n\n// const DATA_INPUT = gql`\n// mutation($username: String!, $password: String!, ) {\n//   loginUser(  username: $username, password:$password) {\n//     id,\n//     username,\n//     status\n//   }\n// }\n// `;\nconst dat = [{\n        id: 1,\n        name: \"javascript\",\n        moreData: \"more info\",\n        children: [101, 102]\n    },\n    {\n        id: 101,\n        name: \"Array\",\n        moreData: \"aaarraaayy\",\n        children: [103, 104]\n    },\n    {\n        id: 102,\n        name: \"Object\",\n        moreData: \"ooobbbjjject\",\n        children: [105, 106]\n    },\n\n    {\n        id: 103,\n        name: \"Arrayspec1\",\n        moreData: \"aaarraaayy\",\n        children: [101, 102]\n    },\n    {\n        id: 104,\n        name: \"Arrayspec2\",\n        moreData: \"ooobbbjjject\",\n        children: [101, 102]\n    },\n\n    {\n        id: 105,\n        name: \"objectspec1\",\n        moreData: \"aaarraaayy\",\n        children: [101, 102]\n    },\n    {\n        id: 106,\n        name: \"Objectspec2\",\n        moreData: \"ooobbbjjject\",\n        children: [101, 102]\n    }\n\n\n]\n\nfunction buttonNameFromArray(id) {\n\n    let obj = dat.find(x => x.id === id);\n    console.log(obj)\n    return ( < input type = \"button\"\n        value = {\n            obj.name\n        } > < /input>)\n\n    }\n\n    function CreateRender() {\n\n\n        return ( < > < div > nome madre: {\n                dat[0].name\n            }\n            figli: {\n                dat[0].children.map((x) => buttonNameFromArray(x))\n            }\n\n\n\n\n\n            <\n            /div></ > )\n\n\n    }\n\n\n\n    export default function Home() {\n\n        //const [dataInput, { data, loading }] = useMutation(DATA_INPUT);\n\n        return (\n\n            <\n            > < div > wee < /div>      <\n            CreateRender / >\n\n            <\n            />);\n        }"]},"metadata":{},"sourceType":"module"}