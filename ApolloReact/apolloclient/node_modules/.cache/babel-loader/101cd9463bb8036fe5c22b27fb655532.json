{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\"; // const DATA_INPUT = gql`\n// mutation($username: String!, $password: String!, ) {\n//   loginUser(  username: $username, password:$password) {\n//     id,\n//     username,\n//     status\n//   }\n// }\n// `;\n\nconst dat = [{\n  id: 1,\n  name: \"javascript\",\n  moreData: \"more info\",\n  children: [101, 102]\n}, {\n  id: 101,\n  name: \"Array\",\n  moreData: \"aaarraaayy\",\n  children: [101, 102]\n}, {\n  id: 102,\n  name: \"Object\",\n  moreData: \"ooobbbjjject\",\n  children: [101, 102]\n}];\n\nfunction namefromarray(id) {\n  let obj = dat.find(x => x.id === id);\n  console.log(obj);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"button\",\n    placeholder: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\nfunction CreateRender() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"nome madre:\", dat[0].name, \" figli:\", dat[0].children.map(x => namefromarray(x))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n\n_c = CreateRender;\nexport default function Home() {\n  //const [dataInput, { data, loading }] = useMutation(DATA_INPUT);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"wee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateRender, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateRender\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","dat","id","name","moreData","children","namefromarray","obj","find","x","console","log","CreateRender","map","Home"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAC,CAAC;AAACC,EAAAA,EAAE,EAAC,CAAJ;AAAMC,EAAAA,IAAI,EAAC,YAAX;AAAwBC,EAAAA,QAAQ,EAAC,WAAjC;AAA6CC,EAAAA,QAAQ,EAAC,CAAC,GAAD,EAAK,GAAL;AAAtD,CAAD,EACV;AAACH,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,IAAI,EAAC,OAAb;AAAqBC,EAAAA,QAAQ,EAAC,YAA9B;AAA2CC,EAAAA,QAAQ,EAAC,CAAC,GAAD,EAAK,GAAL;AAApD,CADU,EAEV;AAACH,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,IAAI,EAAC,QAAb;AAAsBC,EAAAA,QAAQ,EAAC,cAA/B;AAA8CC,EAAAA,QAAQ,EAAC,CAAC,GAAD,EAAK,GAAL;AAAvD,CAFU,CAAV;;AAMA,SAASC,aAAT,CAAuBJ,EAAvB,EAA0B;AAE1B,MAAIK,GAAG,GAAGN,GAAG,CAACO,IAAJ,CAASC,CAAC,IAAIA,CAAC,CAACP,EAAF,KAASA,EAAvB,CAAV;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,sBAAQ;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAR;AAEC;;AACD,SAASK,YAAT,GAAwB;AAGtB,sBAAO;AAAA,2BAAE;AAAA,gCAAiBX,GAAG,CAAC,CAAD,CAAH,CAAOE,IAAxB,aAAqCF,GAAG,CAAC,CAAD,CAAH,CAAOI,QAAP,CAAgBQ,GAAhB,CAAqBJ,CAAD,IAAKH,aAAa,CAACG,CAAD,CAAtC,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,mBAAP;AASD;;KAZQG,Y;AAgBT,eAAe,SAASE,IAAT,GAAgB;AAE7B;AAEE,sBAEA;AAAA,4BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,eACA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADA;AAAA,kBAFA;AAMD;MAVqBA,I","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\n\n// const DATA_INPUT = gql`\n// mutation($username: String!, $password: String!, ) {\n//   loginUser(  username: $username, password:$password) {\n//     id,\n//     username,\n//     status\n//   }\n// }\n// `;\nconst dat=[{id:1,name:\"javascript\",moreData:\"more info\",children:[101,102]},\n{id:101,name:\"Array\",moreData:\"aaarraaayy\",children:[101,102]},\n{id:102,name:\"Object\",moreData:\"ooobbbjjject\",children:[101,102]}\n\n\n]\nfunction namefromarray(id){\n\nlet obj = dat.find(x => x.id === id);\nconsole.log(obj)\nreturn (<input type=\"button\" placeholder></input>)\n\n}\nfunction CreateRender (){\n\n\n  return(<><div>nome madre:{dat[0].name} figli:{dat[0].children.map((x)=>namefromarray(x))}\n    \n    \n    \n    \n    \n    </div></>)\n\n\n}\n\n\n\nexport default function Home() {\n\n  //const [dataInput, { data, loading }] = useMutation(DATA_INPUT);\n\n    return (\n    \n    <><div>wee</div>     \n    <CreateRender/>\n    \n     </>);\n  }"]},"metadata":{},"sourceType":"module"}