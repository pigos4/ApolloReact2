{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Home() {\n  _s();\n\n  function Funct(prop) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name:\", prop]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  const DATO = gql`\n  query dato($id: String) {\n    dato(id: $id) {\n      name\n      info\n      Description\n      father\n    }\n  }\n`;\n  const [getFields, {\n    loading,\n    data\n  }] = useLazyQuery(DATO);\n  if (data) console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: () => getFields({\n          variables: {\n            id: \"36\"\n          }\n        }),\n        value: \"Javascript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"+fxFAhDCP9BvyfcX7O73R/Bfm6Q=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","useLazyQuery","Home","Funct","prop","DATO","getFields","loading","data","console","log","variables","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,YAA3B,QAA+C,gBAA/C;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B,WAASC,KAAT,CAAeC,IAAf,EAAoB;AAClB,wBACI;AAAA,6BACA;AAAA,gCACE;AAAA,8BAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAsBD;;AAGD,QAAMC,IAAI,GAAGN,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATE;AAWF,QAAM,CAACO,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAZ,IAAiCP,YAAY,CAACI,IAAD,CAAnD;AAEA,MAAGG,IAAH,EAAQC,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAIR,sBACA;AAAA,2BACA;AAAA,6BACA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAE,MAAIF,SAAS,CAAC;AAAEK,UAAAA,SAAS,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAb,SAAD,CAA3C;AAA0E,QAAA,KAAK,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AAYC;;GAzDuBV,I;UAuCeD,Y;;;KAvCfC,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nexport default function Home() {\n\n  function Funct(prop){\n    return (\n        <>\n        <div>\n          <p>Name:{prop}</p>\n          <p></p>\n          <p></p>\n          <p></p>\n\n\n\n        </div>\n\n\n\n\n        </>\n\n\n\n\n    )\n\n  }\n\n\n  const DATO = gql`\n  query dato($id: String) {\n    dato(id: $id) {\n      name\n      info\n      Description\n      father\n    }\n  }\n`;\n\nconst [getFields, { loading, data }] = useLazyQuery(DATO);\n\nif(data)console.log(data)\n\n\n\nreturn(\n<>\n<div>\n<input type=\"button\" onClick={()=>getFields({ variables: { id: \"36\" } })} value=\"Javascript\"></input>\n\n</div>\n</>\n\n)\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}