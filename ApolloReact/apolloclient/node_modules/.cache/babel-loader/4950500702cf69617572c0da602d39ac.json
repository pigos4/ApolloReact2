{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/List.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Scanner from \"./components/Scanner\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./styles.css\";\nexport default function List() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [camera, setCamera] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const onDetected = result => {\n    setResult(result);\n  };\n\n  function AddRecord() {\n    _s();\n\n    const ADD_INPUT = gql`\n        mutation($name: String!, $price: Int!, $barcode: String!) {\n          addInput(name: $name, price: $price, barcode: $barcode) {\n            response\n            \n          }\n        }\n      `;\n    const [addInput, {\n      data,\n      loading\n    }] = useMutation(ADD_INPUT);\n    const [inputName, setinputName] = useState({\n      name: \"\",\n      price: 0,\n      barcode: result\n    }); //        const [inputPrice, setinputPrice ] =useState(NaN);\n\n    data ? console.log(data) : console.log('we');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputName({\n          name: e.target.value,\n          price: inputName.price,\n          barcode: result\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setinputName({\n          name: inputName.name,\n          price: parseInt(e.target.value),\n          barcode: result\n        }),\n        placeholder: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => addInput({\n          variables: inputName\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), data ? data.addInput.response === \"added\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 53\n      }, this) : \"error\" : console.log('we')]\n    }, void 0, true);\n  }\n\n  _s(AddRecord, \"60QTTB20YB2KFbMdnZt427X3eH0=\", false, function () {\n    return [useMutation];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Save your products.\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result ? result : \"Scanning...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCamera(!camera),\n      children: camera ? \"Stop\" : \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: camera && /*#__PURE__*/_jsxDEV(Scanner, {\n        onDetected: onDetected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AddRecord, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(List, \"eG6lp+lZyYhs06v4FOVlOF4izXQ=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/List.js"],"names":["React","useState","Scanner","gql","useMutation","Redirect","List","camera","setCamera","result","setResult","onDetected","AddRecord","ADD_INPUT","addInput","data","loading","inputName","setinputName","name","price","barcode","console","log","e","target","value","parseInt","variables","response"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\nimport Scanner from \"./components/Scanner\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport {Redirect } from \"react-router-dom\";\nimport \"./styles.css\";   \n\nexport default function List (){\n\n      const [camera, setCamera] = useState(false);\n      const [result, setResult] = useState(null);\n\n      const onDetected = result => {\n        setResult(result);\n      };\n      \n      \n      function AddRecord(){\n        const ADD_INPUT = gql`\n        mutation($name: String!, $price: Int!, $barcode: String!) {\n          addInput(name: $name, price: $price, barcode: $barcode) {\n            response\n            \n          }\n        }\n      `;\n\n  const [addInput, { data, loading }] = useMutation(ADD_INPUT);\n\n        const [inputName, setinputName ] =useState({name:\"\",price:0,barcode:result} );\n//        const [inputPrice, setinputPrice ] =useState(NaN);\n\ndata?console.log(data):console.log('we')\n        return(<>\n        <input type=\"text\" onChange={(e)=>setinputName({name:e.target.value,price:inputName.price,barcode:result})} placeholder=\"Name\"></input>\n        <input type=\"number\" onChange={(e)=>setinputName({name:inputName.name,price:parseInt(e.target.value),barcode:result})} placeholder=\"Price\"></input>\n        <input type=\"submit\" onClick={()=>addInput({ variables: inputName })}></input>\n        \n        {(data)?(data.addInput.response===\"added\")?(<Redirect\n            to=\"records\"/>):\"error\":console.log('we')}\n        </>)\n      }\n      return (\n        <div className=\"App\">\n          Save your products.\n          <p>{result ? result : \"Scanning...\"}</p>\n         \n          <button onClick={() => setCamera(!camera)}>\n            {camera ? \"Stop\" : \"Start\"}\n          </button>\n          <div className=\"container\">\n            {camera && <Scanner onDetected={onDetected} />}\n          </div>\n          <AddRecord/>\n        </div>\n      );\n    }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}