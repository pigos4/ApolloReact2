{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!) {\n    loginUser(username: $username, password: $password) {\n      id\n      username\n      status\n    }\n  }\n`;\nexport default function Login(props) {\n  _s();\n\n  const [loginUser, {\n    data,\n    loading\n  }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [isError, setIsError] = useState( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Inser username e password\"\n  }, void 0, false));\n  const {\n    setAuthTokens\n  } = useAuth();\n  useEffect(() => {\n    if (data) {\n      if (data.loginUser.status === \"error\") {\n        setIsError( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this));\n      } else if (data.loginUser.status === \"Username or password wrong\") {\n        setIsError( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username or password wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }, this));\n      } else if (data.loginUser.status === \"Logged\") {\n        setIsError(\"Logged\");\n        setAuthTokens(data.loginUser.username);\n      }\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Container\",\n        type: \"text\",\n        onChange: e => {\n          setUserLogin({\n            username: e.target.value,\n            password: user.password\n          });\n        },\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"smallContainer\",\n        type: \"password\",\n        onChange: e => {\n          setUserLogin({\n            username: user.username,\n            password: e.target.value\n          });\n        },\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Container\",\n        type: \"button\",\n        value: \"Submit\",\n        onClick: () => {\n          loginUser({\n            variables: user\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 35\n      }, this), isError, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), isError === \"Logged\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 31\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"hn5G1+83vfsnOXW6/yNx8kRVKg8=\", false, function () {\n  return [useMutation, useAuth];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js"],"names":["React","useState","useEffect","gql","useMutation","Link","Redirect","useAuth","LOGIN_USER","Login","props","loginUser","data","loading","user","setUserLogin","username","password","isError","setIsError","setAuthTokens","status","e","target","value","variables"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,UAAU,GAAGL,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAe,SAASM,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAZ,IAAiCT,WAAW,CAACI,UAAD,CAAlD;AACA,QAAM,CAACM,IAAD,EAAOC,YAAP,IAAuBd,QAAQ,CAAC;AAAEe,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CAArC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,eAAC;AAAA;AAAA,mBAAD,CAAtC;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAoBb,OAAO,EAAjC;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,IAAJ,EAAU;AACR,UAAIA,IAAI,CAACD,SAAL,CAAeU,MAAf,KAA0B,OAA9B,EAAuC;AACrCF,QAAAA,UAAU,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAV;AACD,OAFD,MAEO,IAAIP,IAAI,CAACD,SAAL,CAAeU,MAAf,KAA0B,4BAA9B,EAA4D;AACjEF,QAAAA,UAAU,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAV;AACD,OAFM,MAEA,IAAIP,IAAI,CAACD,SAAL,CAAeU,MAAf,KAA0B,QAA9B,EAAwC;AAC7CF,QAAAA,UAAU,CAAC,QAAD,CAAV;AACAC,QAAAA,aAAa,CAACR,IAAI,CAACD,SAAL,CAAeK,QAAhB,CAAb;AACD;AACF;AACF,GAXQ,EAWN,CAACJ,IAAD,CAXM,CAAT;AAaA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGU,CAAD,IAAO;AACfP,UAAAA,YAAY,CAAC;AAAEC,YAAAA,QAAQ,EAAEM,CAAC,CAACC,MAAF,CAASC,KAArB;AAA4BP,YAAAA,QAAQ,EAAEH,IAAI,CAACG;AAA3C,WAAD,CAAZ;AACD,SAJH;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,QAAQ,EAAGK,CAAD,IAAO;AACfP,UAAAA,YAAY,CAAC;AAAEC,YAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAjB;AAA2BC,YAAAA,QAAQ,EAAEK,CAAC,CAACC,MAAF,CAASC;AAA9C,WAAD,CAAZ;AACD,SAJH;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AAAO,QAAA,SAAS,EAAC,WAAjB;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAE,MAAM;AACbb,UAAAA,SAAS,CAAC;AAAEc,YAAAA,SAAS,EAAEX;AAAb,WAAD,CAAT;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cAfF,EAuBGD,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAoB;AAAA;AAAA;AAAA;AAAA,cAvB9B,EAwBGK,OAxBH,eAyBE;AAAA;AAAA;AAAA;AAAA,cAzBF,eA2BE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,EA4BGA,OAAO,KAAK,QAAZ,gBAAuB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAvB,GAAmD,EA5BtD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAkCD;;GApDuBT,K;UACiBL,W,EAGbG,O;;;KAJJE,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\n\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!) {\n    loginUser(username: $username, password: $password) {\n      id\n      username\n      status\n    }\n  }\n`;\n\nexport default function Login(props) {\n  const [loginUser, { data, loading }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({ username: \"\", password: \"\" });\n  const [isError, setIsError] = useState(<>Inser username e password</>);\n  const { setAuthTokens } = useAuth();\n  useEffect(() => {\n    if (data) {\n      if (data.loginUser.status === \"error\") {\n        setIsError(<p>Error</p>);\n      } else if (data.loginUser.status === \"Username or password wrong\") {\n        setIsError(<p>Username or password wrong</p>);\n      } else if (data.loginUser.status === \"Logged\") {\n        setIsError(\"Logged\");\n        setAuthTokens(data.loginUser.username);\n      }\n    }\n  }, [data]);\n\n  return (\n    <>\n    <div className=\"Container\" >\n      <input className=\"Container\" \n        type=\"text\"\n        onChange={(e) => {\n          setUserLogin({ username: e.target.value, password: user.password });\n        }}\n        placeholder=\"Username\" \n      ></input>\n      <input className=\"smallContainer\" \n        type=\"password\"\n        onChange={(e) => {\n          setUserLogin({ username: user.username, password: e.target.value });\n        }}\n        placeholder=\"Password\"\n      ></input>\n      <input className=\"Container\" \n        type=\"button\"\n        value=\"Submit\"\n        onClick={() => {\n          loginUser({ variables: user });\n        }}\n      ></input>\n\n      {loading ? <p>Loading</p> : <p></p>}\n      {isError}\n      <br></br>\n\n      <Link to=\"/signup\">Don't have an account?</Link>\n      {isError === \"Logged\" ? <Redirect to={\"/data\"} /> : \"\"}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}