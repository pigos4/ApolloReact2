{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\";\nimport { React, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport { AuthContext } from \"./context/auth\";\nimport \"./App.css\";\nimport route from \"./route/route\";\n\nconst Data = require('./').default;\n\nimport PrivateRoute from \"../context/PrivateRoute\";\n\nconst RouteWithSubRoutes = require(\"./route/RouteWithSubRoutes\").default;\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"http://localhost:4000/\"\n  }),\n  cache: new InMemoryCache()\n});\nexport default function App() {\n  _s();\n\n  const [authTokens, setAuthTokens] = useState();\n\n  const setTokens = data => {\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\n    setAuthTokens(data);\n  }; // if (authTokens === undefined) {\n  //     xx = \"Log in\";\n  // } else {\n  //     xx = \"Log out\"\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authTokens,\n      setAuthTokens: setTokens\n    },\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/xx\",\n                  children: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/signup\",\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/data\",\n                  children: \"Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [route.map((route, i) => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, { ...route\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/data\",\n              component: Data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Rj2AIHEhWFMaK0+dTWtLHy06L+g=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js"],"names":["ApolloProvider","ApolloClient","InMemoryCache","HttpLink","React","useState","BrowserRouter","Router","Switch","Link","AuthContext","route","Data","require","default","PrivateRoute","RouteWithSubRoutes","client","link","uri","cache","App","authTokens","setAuthTokens","setTokens","data","localStorage","setItem","JSON","stringify","map","i"],"mappings":";;;;;AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,QAJF,QAKO,gBALP;AAMA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,IAA1C,QAAsD,kBAAtD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAE,IAAF,CAAP,CAAeC,OAA5B;;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,MAAMC,kBAAkB,GAAGH,OAAO,CAAC,4BAAD,CAAP,CAAsCC,OAAjE;;AAEA,MAAMG,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9BiB,EAAAA,IAAI,EAAE,IAAIf,QAAJ,CAAa;AAAEgB,IAAAA,GAAG,EAAE;AAAP,GAAb,CADwB;AAE9BC,EAAAA,KAAK,EAAE,IAAIlB,aAAJ;AAFuB,CAAjB,CAAf;AAKA,eAAe,SAASmB,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,EAA5C;;AACE,QAAMmB,SAAS,GAAIC,IAAD,IAAU;AACxBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA/B;AACAF,IAAAA,aAAa,CAACE,IAAD,CAAb;AACH,GAHD,CAF0B,CAO1B;AACA;AAEA;AACA;AACA;;;AACF,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEH,MAAAA,UAAF;AAAcC,MAAAA,aAAa,EAAEC;AAA7B,KAA7B;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEP,MAAxB;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAPF,eAUE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAoBE,QAAC,MAAD;AAAA,uBACGN,KAAK,CAACmB,GAAN,CAAU,CAACnB,KAAD,EAAQoB,CAAR,kBACT,QAAC,kBAAD,OAAgCpB;AAAhC,eAAyBoB,CAAzB;AAAA;AAAA;AAAA;AAAA,oBADD,CADH,eAKE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,OAAnB;AAA2B,cAAA,SAAS,EAAEnB;AAAtC;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAjDuBS,G;;KAAAA,G","sourcesContent":["import {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n} from \"@apollo/client\";\nimport {React,useState} from \"react\";\nimport { BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport { AuthContext } from \"./context/auth\";\nimport \"./App.css\";\nimport route from \"./route/route\";\n\nconst Data = require ('./').default;\nimport PrivateRoute from \"../context/PrivateRoute\";\n\nconst RouteWithSubRoutes = require(\"./route/RouteWithSubRoutes\").default;\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"http://localhost:4000/\" }),\n  cache: new InMemoryCache(),\n});\n\nexport default function App() {\n  const [authTokens, setAuthTokens] = useState();\n    const setTokens = (data) => {\n        localStorage.setItem(\"tokens\", JSON.stringify(data));\n        setAuthTokens(data);\n    }\n\n    // if (authTokens === undefined) {\n    //     xx = \"Log in\";\n\n    // } else {\n    //     xx = \"Log out\"\n    // }\n  return (\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n      <ApolloProvider client={client}>\n        <Router>\n          <div>\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/xx\">Home</Link>\n                </li>\n                <li>\n                  <Link to=\"/login\">Login</Link>\n                </li>\n                <li>\n                  <Link to=\"/signup\">Sign up</Link>\n                </li>\n                <li>\n                  <Link to=\"/data\">Data</Link>\n                </li>\n              </ul>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n            <Switch>\n              {route.map((route, i) => (\n                <RouteWithSubRoutes key={i} {...route} />\n              ))}\n\n              <PrivateRoute path=\"/data\" component={Data} />\n            </Switch>\n          </div>\n        </Router>\n      </ApolloProvider>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}