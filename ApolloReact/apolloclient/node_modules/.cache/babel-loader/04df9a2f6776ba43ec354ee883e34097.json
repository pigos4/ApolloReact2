{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!, ) {\n    loginUser(  username: $username, password:$password) {\n      id,\n      username,\n      status\n    }\n  }\n`;\nexport default function Login(props) {\n  _s();\n\n  const [loginUser, {\n    data,\n    loading\n  }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Insert Username and password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 42\n  }, this));\n  const {\n    setAuthTokens\n  } = useAuth(); //const referer = props.location.state.referer || '/';\n\n  const [idd, setId] = useState(\"\");\n\n  if (data) {\n    if (data.loginUser.status === 'ok') {\n      console.log(data.loginUser.status, \"status\"); // console.log(result.data+\"res.data\")\n      // setId(result.data[1]);\n\n      setAuthTokens(data.loginUser.us);\n      setLoggedIn(true); // console.log(\"id\", id)\n    } //else if (result.status === 401) {\n    //   console.log('error')\n    //   // setIsError(true);\n    // }\n\n  }\n\n  if (isError === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        setUserLogin({\n          \"username\": e.target.value,\n          \"password\": user.password\n        });\n      },\n      placeholder: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: e => {\n        setUserLogin({\n          \"username\": user.username,\n          \"password\": e.target.value\n        });\n      },\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"submit\",\n      onClick: () => {\n        loginUser({\n          variables: user\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => console.log(data),\n      value: \"consolelog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), user.name, user.username, user.password, loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \"Don t have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} //export let id;\n//function Login(props) {\n//const [isLoggedIn, setLoggedIn] = useState(false);\n//const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n//const [userName, setUserName] = useState(\"\");\n//const [password, setPassword] = useState(\"\");\n//const { setAuthTokens } = useAuth();\n//const referer = props.location.state.referer || '/';\n//   const [idd ,setId] = useState(\"\");\n// id=idd;\n//   function postLogin() {\n//  let dat = {userName, password};\n//   let x= Api(\"post\", \"i\", dat);\n//   console.log(x);\n//     x.then(result => {console.log(result.status)\n//       if (result.status === 200) {console.log(\"status\")\n//         console.log(result.data+\"res.data\")\n//         setId(result.data[1]);\n//         setAuthTokens(result.data);\n//         setLoggedIn(true);\n//         console.log(\"id\", id)\n//       } else if (result.status === 401) {\n//         setIsError(true);\n//       }\n//     }).catch(e => {\n//      // setIsError(<Error>The username or password provided were incorrect!</Error>);\n//     });\n//   }\n//   if (isError === true) {\n//     return <Redirect to={\"/\"} />;\n//   }\n//   if (isLoggedIn) {\n//     return <Redirect to={referer} />;\n//   }\n//   return (\n//     <Card>\n//       <Form>\n//         <Input\n//           type=\"username\"\n//           value={userName}\n//           onChange={e => {\n//             setUserName(e.target.value);\n//           }}\n//           placeholder=\"email\"\n//         />\n//         <Input\n//           type=\"password\"\n//           value={password}\n//           onChange={e => {\n//             setPassword(e.target.value);\n//           }}\n//           placeholder=\"password\"\n//         />\n//         <Button onClick={postLogin}>Sign In</Button>\n//       </Form>\n//       <Link to=\"/signup\">Don t have an account?</Link>\n//     {isError}\n//     </Card>\n//   );\n// }\n// //{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\n// export default Login;\n\n_s(Login, \"ShzNCHO2af+YQZ8NShomV7Vef98=\", false, function () {\n  return [useMutation, useAuth];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js"],"names":["React","useState","gql","useMutation","Link","Redirect","useAuth","LOGIN_USER","Login","props","loginUser","data","loading","user","setUserLogin","username","password","isLoggedIn","setLoggedIn","isError","setIsError","setAuthTokens","idd","setId","status","console","log","us","e","target","value","variables","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAGA,MAAMC,UAAU,GAAGL,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAe,SAASM,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAZ,IAAiCT,WAAW,CAACI,UAAD,CAAlD;AACA,QAAM,CAACM,IAAD,EAAOC,YAAP,IAAuBb,QAAQ,CAAC;AAACc,IAAAA,QAAQ,EAAE,EAAX;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CAArC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAAtC;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAoBf,OAAO,EAAjC,CALmC,CAMnC;;AACA,QAAM,CAACgB,GAAD,EAAMC,KAAN,IAAetB,QAAQ,CAAC,EAAD,CAA7B;;AACF,MAAGU,IAAH,EAAQ;AACN,QAAIA,IAAI,CAACD,SAAL,CAAec,MAAf,KAA0B,IAA9B,EAAoC;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACD,SAAL,CAAec,MAA3B,EAAkC,QAAlC,EAAD,CACpC;AACA;;AACAH,MAAAA,aAAa,CAACV,IAAI,CAACD,SAAL,CAAeiB,EAAhB,CAAb;AACAT,MAAAA,WAAW,CAAC,IAAD,CAAX,CAJoC,CAKpC;AACA,KAPM,CAQP;AACD;AACA;AACA;;AACC;;AAED,MAAIC,OAAO,KAAK,IAAhB,EAAsB;AACpB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIF,UAAJ,EAAgB;AACd,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAIC,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGW,CAAD,IAAK;AAACd,QAAAA,YAAY,CAAC;AAAC,sBAAWc,CAAC,CAACC,MAAF,CAASC,KAArB;AAA2B,sBAAWjB,IAAI,CAACG;AAA3C,SAAD,CAAZ;AAAmE,OAAtG;AAAuG,MAAA,WAAW,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAGY,CAAD,IAAK;AAACd,QAAAA,YAAY,CAAC;AAAC,sBAAWD,IAAI,CAACE,QAAjB;AAA0B,sBAAWa,CAAC,CAACC,MAAF,CAASC;AAA9C,SAAD,CAAZ;AAAmE,OAA1G;AAA4G,MAAA,WAAW,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAE,MAAM;AAAEpB,QAAAA,SAAS,CAAC;AAAEqB,UAAAA,SAAS,EAAElB;AAAb,SAAD,CAAT;AAAiC;AAAtF;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAMY,OAAO,CAACC,GAAR,CAAYf,IAAZ,CAFjB;AAEoC,MAAA,KAAK,EAAC;AAF1C;AAAA;AAAA;AAAA;AAAA,YAPF,EAUYE,IAAI,CAACmB,IAVjB,EAUuBnB,IAAI,CAACE,QAV5B,EAUsCF,IAAI,CAACG,QAV3C,EAWGJ,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAX9B,eAcE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAkBD,C,CASD;AAEA;AACE;AACD;AACC;AACA;AACA;AACA;AACF;AACA;AACA;AAEE;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA1HwBJ,K;UACiBL,W,EAIbG,O;;;KALJE,K","sourcesContent":["import React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\n\n\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!, ) {\n    loginUser(  username: $username, password:$password) {\n      id,\n      username,\n      status\n    }\n  }\n`;\n\nexport default function Login(props) {\n  const [loginUser, { data, loading }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({username: \"\",  password: \"\",});\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n  const { setAuthTokens } = useAuth();\n  //const referer = props.location.state.referer || '/';\n  const [idd ,setId] = useState(\"\");\nif(data){\n  if (data.loginUser.status === 'ok') {console.log(data.loginUser.status,\"status\")\n  // console.log(result.data+\"res.data\")\n  // setId(result.data[1]);\n  setAuthTokens(data.loginUser.us);\n  setLoggedIn(true);\n  // console.log(\"id\", id)\n } \n //else if (result.status === 401) {\n//   console.log('error')\n//   // setIsError(true);\n// }\n}\n\nif (isError === true) {\n  return <Redirect to={\"/\"} />;\n}\nif (isLoggedIn) {\n  return <Redirect to={'/'} />;\n}\n\n\n\n  return (\n    <>\n      <input type=\"text\" onChange={(e)=>{setUserLogin({\"username\":e.target.value,\"password\":user.password})}}placeholder=\"username\"></input>\n      <input type=\"password\" onChange={(e)=>{setUserLogin({\"username\":user.username,\"password\":e.target.value})}} placeholder=\"password\"></input>\n      <input type=\"button\" value=\"submit\" onClick={() => { loginUser({ variables: user  });}}></input>\n      \n\n      \n      <input\n        type=\"button\"\n        onClick={() => console.log(data)} value=\"consolelog\"\n      ></input>{user.name}{user.username}{user.password}\n      {loading ? <p>loading</p> : <p>done</p>}\n      {/* {data?`Login ok ${data.addUser.response}\"`:\"\"} */}\n\n      <Link to=\"/signup\">Don t have an account?</Link>\n    </>\n  );\n}\n\n\n\n\n\n\n\n\n//export let id;\n\n//function Login(props) {\n  //const [isLoggedIn, setLoggedIn] = useState(false);\n //const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n  //const [userName, setUserName] = useState(\"\");\n  //const [password, setPassword] = useState(\"\");\n  //const { setAuthTokens } = useAuth();\n  //const referer = props.location.state.referer || '/';\n//   const [idd ,setId] = useState(\"\");\n// id=idd;\n//   function postLogin() {\n    \n  //  let dat = {userName, password};\n  //   let x= Api(\"post\", \"i\", dat);\n  //   console.log(x);\n//     x.then(result => {console.log(result.status)\n//       if (result.status === 200) {console.log(\"status\")\n//         console.log(result.data+\"res.data\")\n//         setId(result.data[1]);\n//         setAuthTokens(result.data);\n//         setLoggedIn(true);\n//         console.log(\"id\", id)\n//       } else if (result.status === 401) {\n//         setIsError(true);\n//       }\n//     }).catch(e => {\n//      // setIsError(<Error>The username or password provided were incorrect!</Error>);\n      \n//     });\n//   }\n//   if (isError === true) {\n//     return <Redirect to={\"/\"} />;\n//   }\n//   if (isLoggedIn) {\n//     return <Redirect to={referer} />;\n//   }\n//   return (\n//     <Card>\n//       <Form>\n//         <Input\n//           type=\"username\"\n//           value={userName}\n//           onChange={e => {\n//             setUserName(e.target.value);\n//           }}\n//           placeholder=\"email\"\n//         />\n//         <Input\n//           type=\"password\"\n//           value={password}\n//           onChange={e => {\n//             setPassword(e.target.value);\n//           }}\n//           placeholder=\"password\"\n//         />\n//         <Button onClick={postLogin}>Sign In</Button>\n//       </Form>\n//       <Link to=\"/signup\">Don t have an account?</Link>\n//     {isError}\n//     </Card>\n//   );\n// }\n// //{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\n// export default Login;"]},"metadata":{},"sourceType":"module"}