{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\nimport './records.css';\n\nfunction Delete(props) {\n  _s();\n\n  const DELETE_ITEM = gql`\n    mutation($idd: String!) {\n      deleteitem(idd: $idd) {\n        status\n      }\n    }\n  `;\n  const [deletionStatus, {\n    data\n  }] = useMutation(DELETE_ITEM);\n\n  if (data) {\n    if (data.deleteitem.status) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: () => deletionStatus({\n          variables: props\n        }),\n        value: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(Delete, \"0144R6YQLYeFvRBRK/ApJ3kfpa8=\", false, function () {\n  return [useMutation];\n});\n\n_c = Delete;\nconst RECORDS = gql`\n  query {\n    records {\n      nome\n      id\n      price\n      barcode\n    }\n  }\n`;\nexport default function Records() {\n  _s2();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(RECORDS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.records.map(res => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"par\",\n      children: [/*#__PURE__*/_jsxDEV(Delete, {\n        idd: res.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"nome:\", res.nome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), \"id:\", res.id, /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), \"Price:\", res.price, \" Barcode:\", res.barcode]\n    }, res.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_s2(Records, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Records;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Delete\");\n$RefreshReg$(_c2, \"Records\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js"],"names":["useQuery","gql","useMutation","Redirect","Delete","props","DELETE_ITEM","deletionStatus","data","deleteitem","status","variables","RECORDS","Records","loading","error","records","map","res","id","nome","price","barcode"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,EAAwBC,WAAxB,QAA2C,gBAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,eAAP;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAMC,WAAW,GAAGL,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,GANE;AAQA,QAAM,CAACM,cAAD,EAAiB;AAAEC,IAAAA;AAAF,GAAjB,IAA6BN,WAAW,CAACI,WAAD,CAA9C;;AACA,MAAIE,IAAJ,EAAU;AACR,QAAIA,IAAI,CAACC,UAAL,CAAgBC,MAApB,EAA4B;AAC1B,0BACE;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD;AACF,GARD,MAQO;AACL,wBACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAMH,cAAc,CAAC;AAAEI,UAAAA,SAAS,EAAEN;AAAb,SAAD,CAF/B;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AASD;AACF;;GA7BQD,M;UAS4BF,W;;;KAT5BE,M;AA+BT,MAAMQ,OAAO,GAAGX,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAe,SAASY,OAAT,GAAmB;AAAA;;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBP,IAAAA;AAAlB,MAA2BR,QAAQ,CAACY,OAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,cACGP,IAAI,CAACQ,OAAL,CAAaC,GAAb,CAAkBC,GAAD,iBAChB;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,GAAG,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4BAASD,GAAG,CAACE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,SAGaF,GAAG,CAACC,EAHjB,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,YAIgBD,GAAG,CAACG,KAJpB,eAIoCH,GAAG,CAACI,OAJxC;AAAA,OAAQJ,GAAG,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAYD;;IAhBuBN,O;UACWb,Q;;;MADXa,O","sourcesContent":["import { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\nimport './records.css';\n\nfunction Delete(props) {\n  const DELETE_ITEM = gql`\n    mutation($idd: String!) {\n      deleteitem(idd: $idd) {\n        status\n      }\n    }\n  `;\n\n  const [deletionStatus, { data }] = useMutation(DELETE_ITEM);\n  if (data) {\n    if (data.deleteitem.status) {\n      return (\n        <>\n          <Redirect to={\"/records\"} />\n        </>\n      );\n    }\n  } else {\n    return (\n      <>\n        <input\n          type=\"button\"\n          onClick={() => deletionStatus({ variables: props })}\n          value=\"Delete\"\n        ></input>\n      </>\n    );\n  }\n}\n\nconst RECORDS = gql`\n  query {\n    records {\n      nome\n      id\n      price\n      barcode\n    }\n  }\n`;\n\nexport default function Records() {\n  const { loading, error, data } = useQuery(RECORDS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      {data.records.map((res) => (\n        <p key={res.id} className=\"par\">\n          <Delete idd={res.id} />\n          <p>nome:{res.nome}</p>\n          <p></p>id:{res.id}\n          <p></p>Price:{res.price} Barcode:{res.barcode}\n        </p>\n      ))}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}