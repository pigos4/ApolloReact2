{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apolloreact/apolloclient/src/App.js\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nconst Homes = require('./route/Home').default;\n\nconst route = require('./route/route');\n\nfunction RouteWithSubRoutes(route) {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: props =>\n    /*#__PURE__*/\n    // pass the sub-routes down to keep nesting\n    _jsxDEV(route.component, { ...props,\n      routes: route.routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteWithSubRoutes;\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'http://localhost:4000/'\n  }),\n  cache: new InMemoryCache()\n});\nexport default function App() {\n  console.log(route[0]); //let routeMap= route.map((x,i)=>{return( <><Route key={i} path={x.path}><x.lin key={i}/></Route></>)});\n\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/xx\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: route.map((route, i) => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, { ...route\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\n\nfunction About() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"About\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = About;\n\nfunction Users() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Users\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = Users;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RouteWithSubRoutes\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"About\");\n$RefreshReg$(_c4, \"Users\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apolloreact/apolloclient/src/App.js"],"names":["ApolloProvider","ApolloClient","InMemoryCache","HttpLink","React","BrowserRouter","Router","Switch","Route","Link","Homes","require","default","route","RouteWithSubRoutes","path","props","routes","client","link","uri","cache","App","console","log","map","i","About","Users"],"mappings":";;AAAA,SAAUA,cAAV,EAAyBC,YAAzB,EAAuCC,aAAvC,EAAsDC,QAAtD,QAAuE,gBAAvE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAUC,aAAa,IAAIC,MAA3B,EAAoCC,MAApC,EAA6CC,KAA7C,EAAqDC,IAArD,QAAgE,kBAAhE;AACA,OAAO,WAAP;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAtC;;AACA,MAAMC,KAAK,GAAGF,OAAO,CAAE,eAAF,CAArB;;AAEA,SAASG,kBAAT,CAA4BD,KAA5B,EAAmC;AACjC,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACE,IADd;AAEE,IAAA,MAAM,EAAEC,KAAK;AAAA;AACX;AACA,YAAC,KAAD,CAAO,SAAP,OAAqBA,KAArB;AAA4B,MAAA,MAAM,EAAEH,KAAK,CAACI;AAA1C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAVQH,kB;AAcT,MAAMI,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAC9BkB,EAAAA,IAAI,EAAE,IAAIhB,QAAJ,CAAa;AAACiB,IAAAA,GAAG,EAAE;AAAN,GAAb,CADwB;AAE9BC,EAAAA,KAAK,EAAE,IAAInB,aAAJ;AAFuB,CAAjB,CAAf;AAKA,eAAe,SAASoB,GAAT,GAAe;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAAC,CAAD,CAAjB,EAD4B,CAE7B;;AAGC,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEK,MAAxB;AAAA,2BACA,QAAC,MAAD;AAAA,6BACE;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,MAAD;AAAA,oBACCL,KAAK,CAACY,GAAN,CAAU,CAACZ,KAAD,EAAQa,CAAR,kBACP,QAAC,kBAAD,OAAgCb;AAAhC,aAAyBa,CAAzB;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;MApCuBJ,G;;AAwCxB,SAASK,KAAT,GAAiB;AACf,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAFQA,K;;AAIT,SAASC,KAAT,GAAiB;AACf,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAFQA,K","sourcesContent":["import {  ApolloProvider,ApolloClient, InMemoryCache, HttpLink, } from '@apollo/client';\nimport React from \"react\";\nimport {  BrowserRouter as Router,  Switch,  Route,  Link} from \"react-router-dom\";\nimport './App.css';\nconst Homes = require('./route/Home').default;\nconst route = require ('./route/route')\n\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\n\n\nconst client = new ApolloClient({\n  link: new HttpLink({uri: 'http://localhost:4000/'}),\n  cache: new InMemoryCache()\n});\n\nexport default function App() {\n  console.log(route[0] )\n //let routeMap= route.map((x,i)=>{return( <><Route key={i} path={x.path}><x.lin key={i}/></Route></>)});\n\n\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/xx\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/signup\">Sign up</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n        {route.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n          \n          \n        </Switch>\n      </div>\n    </Router>\n     </ApolloProvider>\n  );\n}\n\n\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n"]},"metadata":{},"sourceType":"module"}