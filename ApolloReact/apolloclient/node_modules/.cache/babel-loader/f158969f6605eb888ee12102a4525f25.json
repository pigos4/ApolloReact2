{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Home() {\n  _s();\n\n  function QueryRequest() {}\n\n  const [getFields, {\n    loading,\n    data\n  }] = useLazyQuery(DATO);\n  const [inputsUser, setinputsUser] = useState({\n    id: \"36\",\n    name: \"\",\n    description: \"\",\n    extraInfo: \"\",\n    child: []\n  });\n  const [renderDataLoading, setrenderDataLoading] = useState(null);\n  useEffect(() => {\n    loading ? setrenderDataLoading( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)) : setrenderDataLoading( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n\n    if (data) {\n      setrenderDataLoading( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name:\", data.dato.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Info:\", data.dato.info]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description:\", data.dato.Description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n    }\n  }, [loading, data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          name: e.target.value\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          description: e.target.value\n        }),\n        placeholder: \"Descriptio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          extraInfo: e.target.value\n        }),\n        placeholder: \"ExtraInfo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => getFields({\n        variables: {\n          id: inputsUser.id\n        }\n      }),\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), renderDataLoading]\n  }, void 0, true);\n}\n\n_s(Home, \"kZu0s3vxLETynWMtMKXBk3K4Zcg=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","useLazyQuery","Home","QueryRequest","getFields","loading","data","DATO","inputsUser","setinputsUser","id","name","description","extraInfo","child","renderDataLoading","setrenderDataLoading","dato","info","Description","e","target","value","variables"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,YAA3B,QAA+C,gBAA/C;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC/B,WAASC,YAAT,GAAuB,CAGtB;;AAQC,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAZ,IAAiCL,YAAY,CAACM,IAAD,CAAnD;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC;AAC3Ca,IAAAA,EAAE,EAAE,IADuC;AAE3CC,IAAAA,IAAI,EAAE,EAFqC;AAG3CC,IAAAA,WAAW,EAAE,EAH8B;AAI3CC,IAAAA,SAAS,EAAE,EAJgC;AAK3CC,IAAAA,KAAK,EAAE;AALoC,GAAD,CAA5C;AAQA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CnB,QAAQ,CAAC,IAAD,CAA1D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,GACHW,oBAAoB,eAClB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADkB,CADjB,GAMHA,oBAAoB,eAAC,qCAAD,CANxB;;AAQA,QAAIV,IAAJ,EAAU;AACRU,MAAAA,oBAAoB,eAClB;AAAA,gCACE;AAAA,8BAASV,IAAI,CAACW,IAAL,CAAUN,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,8BAASL,IAAI,CAACW,IAAL,CAAUC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,qCAAgBZ,IAAI,CAACW,IAAL,CAAUE,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADkB,CAApB;AAOD;AACF,GAlBQ,EAkBN,CAACd,OAAD,EAAUC,IAAV,CAlBM,CAAT;AAoBA,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGc,CAAD,IACRX,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBG,UAAAA,IAAI,EAAES,CAAC,CAACC,MAAF,CAASC;AAAhC,SAAD,CAHjB;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGF,CAAD,IACRX,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBI,UAAAA,WAAW,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAAvC,SAAD,CAHjB;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGF,CAAD,IACRX,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBK,UAAAA,SAAS,EAAEO,CAAC,CAACC,MAAF,CAASC;AAArC,SAAD,CAHjB;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAMlB,SAAS,CAAC;AAAEmB,QAAAA,SAAS,EAAE;AAAEb,UAAAA,EAAE,EAAEF,UAAU,CAACE;AAAjB;AAAb,OAAD,CAF1B;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAxBF,EA6BGK,iBA7BH;AAAA,kBADF;AAiCD;;GA5EuBb,I;UAYiBD,Y;;;KAZjBC,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nexport default function Home() {\nfunction QueryRequest(){\n\n\n}\n\n\n\n\n\n  \n\n  const [getFields, { loading, data }] = useLazyQuery(DATO);\n  const [inputsUser, setinputsUser] = useState({\n    id: \"36\",\n    name: \"\",\n    description: \"\",\n    extraInfo: \"\",\n    child: [],\n  });\n\n  const [renderDataLoading, setrenderDataLoading] = useState(null);\n\n  useEffect(() => {\n    loading\n      ? setrenderDataLoading(\n          <>\n            <p>loading</p>\n          </>\n        )\n      : setrenderDataLoading(<></>);\n\n    if (data) {\n      setrenderDataLoading(\n        <div>\n          <p>Name:{data.dato.name}</p>\n          <p>Info:{data.dato.info}</p>\n          <p>Description:{data.dato.Description}</p>\n        </div>\n      );\n    }\n  }, [loading, data]);\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, name: e.target.value })\n          }\n          placeholder=\"Name\"\n        ></input>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, description: e.target.value })\n          }\n          placeholder=\"Descriptio\"\n        ></input>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, extraInfo: e.target.value })\n          }\n          placeholder=\"ExtraInfo\"\n        ></input>\n      </div>\n      <input\n        type=\"button\"\n        onClick={() => getFields({ variables: { id: inputsUser.id } })}\n        value=\"Submit\"\n      ></input>\n      {renderDataLoading}\n    </>\n  );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}