{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from '@apollo/client';\nconst RECORDS = gql`\n\nquery records {record{nome\nid\nbarcode\n}}\n  `;\nexport default function Rrcords() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(RECORDS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return data.ciao.map(res => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"nome:\", res.nome, \" cognome:\", res.cognome]\n  }, res.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 33\n  }, this));\n}\n\n_s(Rrcords, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Rrcords;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rrcords\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/list/records/records.js"],"names":["useQuery","gql","RECORDS","Rrcords","loading","error","data","console","log","ciao","map","res","nome","cognome","id"],"mappings":";;;;;AAAI,SAAUA,QAAV,EAAoBC,GAApB,QAA+B,gBAA/B;AAEJ,MAAMC,OAAO,GAACD,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA,GANA;AAQA,eAAe,SAASE,OAAT,GAAmB;AAAA;;AAE/B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,OAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACTE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,SAAQA,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAeC,GAAD,iBAAO;AAAA,wBAAsBA,GAAG,CAACC,IAA1B,eAAyCD,GAAG,CAACE,OAA7C;AAAA,KAAQF,GAAG,CAACG,EAAZ;AAAA;AAAA;AAAA;AAAA,UAArB,CAAR;AAEF;;GARuBX,O;UAEYH,Q;;;KAFZG,O","sourcesContent":["    import {  useQuery, gql } from '@apollo/client';\n\nconst RECORDS=gql`\n\nquery records {record{nome\nid\nbarcode\n}}\n  `;\n\nexport default function Rrcords() {\n \n   const { loading, error, data } = useQuery(RECORDS);\n   if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n    console.log(data)\n   return  data.ciao.map((res)=><p key={res.id}>nome:{res.nome} cognome:{res.cognome}</p>)\n \n}\n"]},"metadata":{},"sourceType":"module"}