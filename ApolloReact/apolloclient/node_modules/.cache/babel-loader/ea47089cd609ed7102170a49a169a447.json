{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Crypto.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nfunction Can() {\n  var _s = $RefreshSig$();\n\n  const MyCanvas = (props = {}) => {\n    _s();\n\n    const {\n      width = 100,\n      height = 100,\n      pixelRatio = window.devicePixelRatio\n    } = props;\n    const canvas = useRef(null);\n    useLayoutEffect(() => {\n      const context = canvas.current.getContext(\"2d\");\n      context.save();\n      context.moveTo(0, 0);\n      context.lineTo(200, 100);\n      context.stroke();\n      context.restore();\n    });\n    const dw = Math.floor(pixelRatio * width);\n    const dh = Math.floor(pixelRatio * height);\n    const style = {\n      width,\n      height\n    };\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      width: dw,\n      height: dh,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  };\n\n  _s(MyCanvas, \"Q3lITeWN+kKLI5OU/24+oVPqDuI=\");\n}\n\n_c = Can;\nexport default function CRYPTO() {\n  _s2();\n\n  const CRYPTO = gql`\n    query crypto($symb: String) {\n      crypto(symb: $symb) {\n        name\n        value\n      }\n    }\n  `;\n  const [getFields, {\n    loading,\n    data\n  }] = useLazyQuery(CRYPTO);\n  const [inputsUser, setinputsUser] = useState({\n    symbol: undefined\n  });\n\n  if (data) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setinputsUser({\n        symbol: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      onClick: () => getFields({\n        variables: {\n          symb: inputsUser.symbol\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      onClick: () => console.log()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Can, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(CRYPTO, \"+ztLg9SK9zMN+wYp3CPcV+3Z1Ew=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c2 = CRYPTO;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Can\");\n$RefreshReg$(_c2, \"CRYPTO\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Crypto.js"],"names":["React","useState","useEffect","useRef","useLayoutEffect","ReactDOM","gql","useMutation","useLazyQuery","Can","MyCanvas","props","width","height","pixelRatio","window","devicePixelRatio","canvas","context","current","getContext","save","moveTo","lineTo","stroke","restore","dw","Math","floor","dh","style","CRYPTO","getFields","loading","data","inputsUser","setinputsUser","symbol","undefined","e","target","value","variables","symb","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAoCC,MAApC,EAA4CC,eAA5C,QAAmE,OAAnE;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,YAA3B,QAA+C,gBAA/C;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACV,QAAMC,QAAQ,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB;AAAA;;AAC/B,UAAM;AACJC,MAAAA,KAAK,GAAG,GADJ;AAEJC,MAAAA,MAAM,GAAG,GAFL;AAGJC,MAAAA,UAAU,GAAGC,MAAM,CAACC;AAHhB,QAIFL,KAJJ;AAMA,UAAMM,MAAM,GAAGd,MAAM,CAAC,IAAD,CAArB;AAEAC,IAAAA,eAAe,CAAC,MAAM;AACpB,YAAMc,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAhB;AAEAF,MAAAA,OAAO,CAACG,IAAR;AACAH,MAAAA,OAAO,CAACI,MAAR,CAAe,CAAf,EAAiB,CAAjB;AACAJ,MAAAA,OAAO,CAACK,MAAR,CAAe,GAAf,EAAmB,GAAnB;AAEDL,MAAAA,OAAO,CAACM,MAAR;AACCN,MAAAA,OAAO,CAACO,OAAR;AACD,KATc,CAAf;AAYA,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWd,UAAU,GAAGF,KAAxB,CAAX;AACA,UAAMiB,EAAE,GAAGF,IAAI,CAACC,KAAL,CAAWd,UAAU,GAAGD,MAAxB,CAAX;AACA,UAAMiB,KAAK,GAAG;AAAElB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAd;AACA,wBAAO;AAAQ,MAAA,GAAG,EAAEI,MAAb;AAAqB,MAAA,KAAK,EAAES,EAA5B;AAAgC,MAAA,MAAM,EAAEG,EAAxC;AAA4C,MAAA,KAAK,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAzBD;;AADU,KACJpB,QADI;AA0BP;;KA1BED,G;AA4BT,eAAe,SAASsB,MAAT,GAAkB;AAAA;;AAC/B,QAAMA,MAAM,GAAGzB,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAPE;AAQA,QAAM,CAAC0B,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAZ,IAAiC1B,YAAY,CAACuB,MAAD,CAAnD;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BnC,QAAQ,CAAC;AAC3CoC,IAAAA,MAAM,EAAEC;AADmC,GAAD,CAA5C;;AAGA,MAAIJ,IAAJ,EAAU,CACT;;AAED,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAGK,CAAD,IAAOH,aAAa,CAAC;AAAEC,QAAAA,MAAM,EAAEE,CAAC,CAACC,MAAF,CAASC;AAAnB,OAAD;AAFhC;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAMT,SAAS,CAAC;AAAEU,QAAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAER,UAAU,CAACE;AAAnB;AAAb,OAAD;AAF1B;AAAA;AAAA;AAAA;AAAA,YALF,eAUE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAE,MAAMO,OAAO,CAACC,GAAR;AAApC;AAAA;AAAA;AAAA;AAAA,YAVF,eAWC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA,kBADF;AAeD;;IA/BuBd,M;UASiBvB,Y;;;MATjBuB,M","sourcesContent":["import React, { useState, useEffect,useRef, useLayoutEffect } from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nfunction Can(){\n    const MyCanvas = (props = {}) => {\n      const {\n        width = 100,\n        height = 100,\n        pixelRatio = window.devicePixelRatio\n      } = props;\n    \n      const canvas = useRef(null);\n    \n      useLayoutEffect(() => {\n        const context = canvas.current.getContext(\"2d\");\n    \n        context.save();\n        context.moveTo(0,0);\n        context.lineTo(200,100);\n    \n       context.stroke();\n        context.restore();\n      });\n    \n    \n      const dw = Math.floor(pixelRatio * width);\n      const dh = Math.floor(pixelRatio * height);\n      const style = { width, height };\n      return <canvas ref={canvas} width={dw} height={dh} style={style} />;\n    };}\n    \nexport default function CRYPTO() {\n  const CRYPTO = gql`\n    query crypto($symb: String) {\n      crypto(symb: $symb) {\n        name\n        value\n      }\n    }\n  `;\n  const [getFields, { loading, data }] = useLazyQuery(CRYPTO);\n  const [inputsUser, setinputsUser] = useState({\n    symbol: undefined,\n  });\n  if (data) {\n  }\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        onChange={(e) => setinputsUser({ symbol: e.target.value })}\n      ></input>\n      <input\n        type=\"submit\"\n        onClick={() => getFields({ variables: { symb: inputsUser.symbol } })}\n      ></input>\n\n      <input type=\"submit\" onClick={() => console.log()}></input>\n     <Can/>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}