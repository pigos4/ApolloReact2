{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Home() {\n  _s();\n\n  //function Funct(){\n  const DATO = gql`\n  query dato($id: String) {\n    dato(id: $id) {\n      name\n      info\n      Description\n    }\n  }\n`;\n  const [getFields, {\n    loading,\n    data\n  }] = useLazyQuery(DATO);\n  if (data) console.log(data); //return (<p>loading</p>)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: () => getFields({\n          variables: {\n            id: \"36\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Funct, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"+fxFAhDCP9BvyfcX7O73R/Bfm6Q=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","useLazyQuery","Home","DATO","getFields","loading","data","console","log","variables","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,YAA3B,QAA+C,gBAA/C;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B;AACA,QAAMC,IAAI,GAAGJ,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARE;AAUF,QAAM,CAACK,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAZ,IAAiCL,YAAY,CAACE,IAAD,CAAnD;AAEA,MAAGG,IAAH,EAAQC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAfuB,CAiB/B;AAEC;;AAGD,sBACA;AAAA,2BACA;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAE,MAAIF,SAAS,CAAC;AAAEK,UAAAA,SAAS,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAb,SAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AAYC;;GAlCuBR,I;UAaeD,Y;;;KAbfC,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nexport default function Home() {\n\n  //function Funct(){\n  const DATO = gql`\n  query dato($id: String) {\n    dato(id: $id) {\n      name\n      info\n      Description\n    }\n  }\n`;\n\nconst [getFields, { loading, data }] = useLazyQuery(DATO);\n\nif(data)console.log(data)\n\n//return (<p>loading</p>)\n\n // }\n\n\nreturn(\n<>\n<div>\n<input type=\"button\" onClick={()=>getFields({ variables: { id: \"36\" } })}></input>\n<Funct/>\n</div>\n</>\n\n)\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}