{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport { AuthContext } from \"./context/aut\";\nimport \"./App.css\";\nimport route from \"./route/route\";\n\nconst RouteWithSubRoutes = require(\"./route/RouteWithSubRoutes\").default;\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"http://localhost:4000/\"\n  }),\n  cache: new InMemoryCache()\n});\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authTokens,\n      setAuthTokens: setTokens\n    },\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/xx\",\n                  children: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/signup\",\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: route.map((route, i) => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, { ...route\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/App.js"],"names":["ApolloProvider","ApolloClient","InMemoryCache","HttpLink","React","BrowserRouter","Router","Switch","Link","AuthContext","route","RouteWithSubRoutes","require","default","client","link","uri","cache","App","authTokens","setAuthTokens","setTokens","map","i"],"mappings":";;AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,QAJF,QAKO,gBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,IAA1C,QAAsD,kBAAtD;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAP,CAAsCC,OAAjE;;AAEA,MAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,EAAAA,IAAI,EAAE,IAAIZ,QAAJ,CAAa;AAAEa,IAAAA,GAAG,EAAE;AAAP,GAAb,CADwB;AAE9BC,EAAAA,KAAK,EAAE,IAAIf,aAAJ;AAFuB,CAAjB,CAAf;AAKA,eAAe,SAASgB,GAAT,GAAe;AAC5B,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,aAAa,EAAEC;AAA7B,KAA7B;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEP,MAAxB;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAiBE,QAAC,MAAD;AAAA,sBACGJ,KAAK,CAACY,GAAN,CAAU,CAACZ,KAAD,EAAQa,CAAR,kBACT,QAAC,kBAAD,OAAgCb;AAAhC,eAAyBa,CAAzB;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;KAhCuBL,G","sourcesContent":["import {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n} from \"@apollo/client\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport { AuthContext } from \"./context/aut\";\nimport \"./App.css\";\nimport route from \"./route/route\";\n\nconst RouteWithSubRoutes = require(\"./route/RouteWithSubRoutes\").default;\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"http://localhost:4000/\" }),\n  cache: new InMemoryCache(),\n});\n\nexport default function App() {\n  return (\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n      <ApolloProvider client={client}>\n        <Router>\n          <div>\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/xx\">Home</Link>\n                </li>\n                <li>\n                  <Link to=\"/login\">Login</Link>\n                </li>\n                <li>\n                  <Link to=\"/signup\">Sign up</Link>\n                </li>\n              </ul>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n            <Switch>\n              {route.map((route, i) => (\n                <RouteWithSubRoutes key={i} {...route} />\n              ))}\n            </Switch>\n          </div>\n        </Router>\n      </ApolloProvider>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}