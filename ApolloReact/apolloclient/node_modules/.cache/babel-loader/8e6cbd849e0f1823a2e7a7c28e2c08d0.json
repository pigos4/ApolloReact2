{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Home() {\n  function Funct() {\n    //   const DATO = gql`\n    //   query dato($id: String) {\n    //     dato(id: $id) {\n    //       name\n    //       info\n    //       Description\n    //     }\n    //   }\n    // `;\n    // const [getFields, { loading, data }] = useLazyQuery(DATO);\n    // getFields({ variables: { id: \"36\" } });\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Funct, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","useLazyQuery","Home","Funct"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,YAA3B,QAA+C,gBAA/C;AAEA,eAAe,SAASC,IAAT,GAAgB;AAE7B,WAASC,KAAT,GAAgB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAEG;;AAGH,sBACA;AAAA,2BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AASC;KA/BuBD,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nexport default function Home() {\n\n  function Funct(){\n//   const DATO = gql`\n//   query dato($id: String) {\n//     dato(id: $id) {\n//       name\n//       info\n//       Description\n//     }\n//   }\n// `;\n\n// const [getFields, { loading, data }] = useLazyQuery(DATO);\n\n// getFields({ variables: { id: \"36\" } });\n\nreturn (<p>loading</p>)\n\n  }\n\n\nreturn(\n<>\n<Funct/>\n</>\n\n)\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}