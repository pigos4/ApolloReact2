{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nconst LOGIN_USER = gql`\n  mutation($username: String!, $password: String!, ) {\n    loginUser(  username: $username, password:$password) {\n      id,\n      username,\n      status\n    }\n  }\n`;\nexport default function Login(props) {\n  _s();\n\n  const [loginUser, {\n    data,\n    loading\n  }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({\n    username: \"\",\n    password: \"\"\n  }); // const [isLoggedIn, setLoggedIn] = useState(false);\n\n  const [isError, setIsError] = useState( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \" Inser username e password \"\n  }, void 0, false));\n  const {\n    setAuthTokens\n  } = useAuth(); //const referer = props.location.state.referer || '/';\n  //const [idd ,setId] = useState(\"\");\n  //data.loginUser.status\n\n  useEffect(() => {\n    if (data) {\n      if (data.loginUser.status === \"error\") {\n        setIsError( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Error \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }, this));\n      } else {\n        setIsError( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Logged\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 60\n        }, this));\n        setAuthTokens(data.loginUser.username);\n      }\n\n      ;\n    }\n  }, [data]); // console.log(result.data+\"res.data\")\n  // setId(result.data[1]);\n  //  setAuthTokens(data.loginUser.username);\n  //  console.log(data)\n  //setLoggedIn(true);\n  // console.log(\"id\", id)\n  //  else if (data.loginUser.status === 'error') {\n  //  console.log('error')\n  //    // setIsError(true);\n  // }\n  // if (isError === true) {\n  //   return <Redirect to={\"/\"} />;\n  // }\n  // if (isLoggedIn) {\n  //   return <Redirect to={'/data'} />;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        setUserLogin({\n          \"username\": e.target.value,\n          \"password\": user.password\n        });\n      },\n      placeholder: \"username\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: e => {\n        setUserLogin({\n          \"username\": user.username,\n          \"password\": e.target.value\n        });\n      },\n      placeholder: \"password\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 44\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"submit\",\n      onClick: () => {\n        loginUser({\n          variables: user\n        });\n      },\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => console.log(data),\n      value: \"consolelog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), user.username, user.password, \" \", loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" loading \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }, this), \" \", isError, \" \", /*#__PURE__*/_jsxDEV(\"br\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \" Don t have an account ? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n} //export let id;\n//function Login(props) {\n//const [isLoggedIn, setLoggedIn] = useState(false);\n//const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n//const [userName, setUserName] = useState(\"\");\n//const [password, setPassword] = useState(\"\");\n//const { setAuthTokens } = useAuth();\n//const referer = props.location.state.referer || '/';\n//   const [idd ,setId] = useState(\"\");\n// id=idd;\n//   function postLogin() {\n//  let dat = {userName, password};\n//   let x= Api(\"post\", \"i\", dat);\n//   console.log(x);\n//     x.then(result => {console.log(result.status)\n//       if (result.status === 200) {console.log(\"status\")\n//         console.log(result.data+\"res.data\")\n//         setId(result.data[1]);\n//         setAuthTokens(result.data);\n//         setLoggedIn(true);\n//         console.log(\"id\", id)\n//       } else if (result.status === 401) {\n//         setIsError(true);\n//       }\n//     }).catch(e => {\n//      // setIsError(<Error>The username or password provided were incorrect!</Error>);\n//     });\n//   }\n//   if (isError === true) {\n//     return <Redirect to={\"/\"} />;\n//   }\n//   if (isLoggedIn) {\n//     return <Redirect to={referer} />;\n//   }\n//   return (\n//     <Card>\n//       <Form>\n//         <Input\n//           type=\"username\"\n//           value={userName}\n//           onChange={e => {\n//             setUserName(e.target.value);\n//           }}\n//           placeholder=\"email\"\n//         />\n//         <Input\n//           type=\"password\"\n//           value={password}\n//           onChange={e => {\n//             setPassword(e.target.value);\n//           }}\n//           placeholder=\"password\"\n//         />\n//         <Button onClick={postLogin}>Sign In</Button>\n//       </Form>\n//       <Link to=\"/signup\">Don t have an account?</Link>\n//     {isError}\n//     </Card>\n//   );\n// }\n// //{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\n// export default Login;\n\n_s(Login, \"d5EZPIMI4NkZgJC894fSpR9Sz8E=\", false, function () {\n  return [useMutation, useAuth];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/route/Login.js"],"names":["React","useState","useEffect","gql","useMutation","Link","Redirect","useAuth","LOGIN_USER","Login","props","loginUser","data","loading","user","setUserLogin","username","password","isError","setIsError","setAuthTokens","status","e","target","value","variables","console","log"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect\n} from \"react\";\nimport {\n  gql,\n  useMutation\n} from \"@apollo/client\";\nimport {\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport {\n  useAuth\n} from \"../context/auth\";\n\n\nconst LOGIN_USER = gql `\n  mutation($username: String!, $password: String!, ) {\n    loginUser(  username: $username, password:$password) {\n      id,\n      username,\n      status\n    }\n  }\n`;\n\nexport default function Login(props) {\n  const [loginUser, {\n    data,\n    loading\n  }] = useMutation(LOGIN_USER);\n  const [user, setUserLogin] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  // const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState( < > Inser username e password < />);\n    const {\n      setAuthTokens\n    } = useAuth();\n    //const referer = props.location.state.referer || '/';\n    //const [idd ,setId] = useState(\"\");\n    //data.loginUser.status\n    useEffect(() => {\n      if (data) {\n        if (data.loginUser.status === \"error\") {\n          setIsError( < p > Error < /p>);}else {setIsError(<p>Logged</p > );\n          setAuthTokens(data.loginUser.username)\n        };\n      }\n    }, [data])\n\n\n    // console.log(result.data+\"res.data\")\n    // setId(result.data[1]);\n\n    //  setAuthTokens(data.loginUser.username);\n    //  console.log(data)\n    //setLoggedIn(true);\n    // console.log(\"id\", id)\n\n    //  else if (data.loginUser.status === 'error') {\n    //  console.log('error')\n    //    // setIsError(true);\n\n    // }\n\n    // if (isError === true) {\n    //   return <Redirect to={\"/\"} />;\n    // }\n    // if (isLoggedIn) {\n    //   return <Redirect to={'/data'} />;\n    // }\n\n\n\n    return ( <\n      >\n      <\n      input type = \"text\"\n      onChange = {\n        (e) => {\n          setUserLogin({\n            \"username\": e.target.value,\n            \"password\": user.password\n          })\n        }\n      }\n      placeholder = \"username\" > < /input> <\n      input type = \"password\"\n      onChange = {\n        (e) => {\n          setUserLogin({\n            \"username\": user.username,\n            \"password\": e.target.value\n          })\n        }\n      }\n      placeholder = \"password\" > < /input> <\n      input type = \"button\"\n      value = \"submit\"\n      onClick = {\n        () => {\n          loginUser({\n            variables: user\n          });\n        }\n      } > < /input>\n\n\n\n      <\n      input type = \"button\"\n      onClick = {\n        () => console.log(data)\n      }\n      value = \"consolelog\" >\n      < /input>{user.username}{user.password} {\n        loading ? < p > loading < /p> : <p>done</p >\n      } {\n        isError\n      } < br > < /br>\n\n      <\n      Link to = \"/signup\" > Don t have an account ? < /Link> <\n      />\n    );\n  }\n\n\n\n\n\n\n\n\n  //export let id;\n\n  //function Login(props) {\n  //const [isLoggedIn, setLoggedIn] = useState(false);\n  //const [isError, setIsError] = useState(<p>Insert Username and password</p>);\n  //const [userName, setUserName] = useState(\"\");\n  //const [password, setPassword] = useState(\"\");\n  //const { setAuthTokens } = useAuth();\n  //const referer = props.location.state.referer || '/';\n  //   const [idd ,setId] = useState(\"\");\n  // id=idd;\n  //   function postLogin() {\n\n  //  let dat = {userName, password};\n  //   let x= Api(\"post\", \"i\", dat);\n  //   console.log(x);\n  //     x.then(result => {console.log(result.status)\n  //       if (result.status === 200) {console.log(\"status\")\n  //         console.log(result.data+\"res.data\")\n  //         setId(result.data[1]);\n  //         setAuthTokens(result.data);\n  //         setLoggedIn(true);\n  //         console.log(\"id\", id)\n  //       } else if (result.status === 401) {\n  //         setIsError(true);\n  //       }\n  //     }).catch(e => {\n  //      // setIsError(<Error>The username or password provided were incorrect!</Error>);\n\n  //     });\n  //   }\n  //   if (isError === true) {\n  //     return <Redirect to={\"/\"} />;\n  //   }\n  //   if (isLoggedIn) {\n  //     return <Redirect to={referer} />;\n  //   }\n  //   return (\n  //     <Card>\n  //       <Form>\n  //         <Input\n  //           type=\"username\"\n  //           value={userName}\n  //           onChange={e => {\n  //             setUserName(e.target.value);\n  //           }}\n  //           placeholder=\"email\"\n  //         />\n  //         <Input\n  //           type=\"password\"\n  //           value={password}\n  //           onChange={e => {\n  //             setPassword(e.target.value);\n  //           }}\n  //           placeholder=\"password\"\n  //         />\n  //         <Button onClick={postLogin}>Sign In</Button>\n  //       </Form>\n  //       <Link to=\"/signup\">Don t have an account?</Link>\n  //     {isError}\n  //     </Card>\n  //   );\n  // }\n  // //{ ()=> {if (isError){return <Error>The username or password provided were incorrect!</Error>} }}\n  // export default Login;"]},"metadata":{},"sourceType":"module"}