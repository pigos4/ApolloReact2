{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apolloreact/apolloclient/src/input/motation.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nconst ADD_TODO = gql`\n mutation users{users{username,\npassword}}\n`;\nexport default function Mut() {\n  _s();\n\n  const [addTodo, {\n    data\n  }] = useMutation(ADD_TODO);\n  const [inputUser, setInput] = useState({\n    username: '',\n    password: ''\n  }); //<input type=\"text\" onChange={(e)=>setInput({password :inputUser.password ,username: e.target.value})}></input>\n  //<input type=\"text\" onChange={(e)=>setInput({username :inputUser.username, password: e.target.value})}></input>\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setInput({\n        username: inputUser.username,\n        password: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      placeholder: \"submit\",\n      onClick: () => {\n        addTodo({\n          variables: {\n            type: inputUser\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [inputUser.username, inputUser.password]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Mut, \"+Ka3HJsginzpaUdVpx3qcdBY66s=\", false, function () {\n  return [useMutation];\n});\n\n_c = Mut;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mut\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apolloreact/apolloclient/src/input/motation.js"],"names":["React","useState","gql","useMutation","ADD_TODO","Mut","addTodo","data","inputUser","setInput","username","password","e","target","value","variables","type"],"mappings":";;;;;;AAAA,SAAOA,KAAP,EAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AAEA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA,CAHA;AAKA,eAAe,SAASG,GAAT,GAAc;AAAA;;AAE7B,QAAM,CAACC,OAAD,EAAU;AAAEC,IAAAA;AAAF,GAAV,IAAsBJ,WAAW,CAACC,QAAD,CAAvC;AACA,QAAK,CAACI,SAAD,EAAYC,QAAZ,IAAsBR,QAAQ,CAAC;AAChCS,IAAAA,QAAQ,EAAE,EADsB;AAClBC,IAAAA,QAAQ,EAAE;AADQ,GAAD,CAAnC,CAH6B,CAM7B;AACA;;AACI,sBAAQ;AAAA,4BACR;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGC,CAAD,IAAKH,QAAQ,CAAC;AAACC,QAAAA,QAAQ,EAAEF,SAAS,CAACE,QAArB;AAA+BC,QAAAA,QAAQ,EAAEC,CAAC,CAACC,MAAF,CAASC;AAAlD,OAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,YADQ,eAER;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,WAAW,EAAC,QAAjC;AAA0C,MAAA,OAAO,EAAE,MAAI;AAACR,QAAAA,OAAO,CAAC;AAAES,UAAAA,SAAS,EAAE;AAAEC,YAAAA,IAAI,EAAER;AAAR;AAAb,SAAD,CAAP;AAA4C;AAApG;AAAA;AAAA;AAAA;AAAA,YAFQ,eAGR;AAAA,iBAAMA,SAAS,CAACE,QAAhB,EAA0BF,SAAS,CAACG,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHQ;AAAA,kBAAR;AAQH;;GAhBuBN,G;UAEIF,W;;;KAFJE,G","sourcesContent":["import{React, useState} from 'react';\nimport { gql, useMutation } from '@apollo/client';\n\nconst ADD_TODO = gql`\n mutation users{users{username,\npassword}}\n`;\n\nexport default function Mut(){\n\nconst [addTodo, { data }] = useMutation(ADD_TODO);\nconst[inputUser, setInput]=useState({\n    username: '', password: ''\n  })\n//<input type=\"text\" onChange={(e)=>setInput({password :inputUser.password ,username: e.target.value})}></input>\n//<input type=\"text\" onChange={(e)=>setInput({username :inputUser.username, password: e.target.value})}></input>\n    return (<>\n    <input type=\"text\" onChange={(e)=>setInput({username :inputUser.username, password: e.target.value})}></input>\n    <input type=\"button\" placeholder=\"submit\" onClick={()=>{addTodo({ variables: { type: inputUser } })}}></input>\n    <div>{inputUser.username}{inputUser.password}</div>\n    </>\n    \n    \n        )\n}"]},"metadata":{},"sourceType":"module"}