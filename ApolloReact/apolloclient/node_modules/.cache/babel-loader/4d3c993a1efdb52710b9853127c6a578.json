{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Dato() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [idToRender, setidTorender] = useState(\"36\");\n  const [functionToRender, setfunctionToRender] = useState(\"\");\n\n  function RenderChild(props) {\n    console.log(props.child, \"propsrender child\");\n    return props.child.map((x, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: x.Name,\n        onClick: () => setidTorender(x.ID)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true));\n  }\n\n  function Funct(prop) {\n    console.log(prop, \"prop\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name:\", prop.data.dato.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description:\", prop.data.dato.Description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Info:\", prop.data.dato.info]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"father\", prop.data.dato.father]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RenderChild, {\n        child: prop.data.dato.child\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  function FunctionIdToRender() {\n    _s();\n\n    const DATO = gql`\n      query dato($id: String) {\n        dato(id: $id) {\n          name\n          info\n          Description\n          father\n          child {\n            ID\n            Name\n          }\n        }\n      }\n    `;\n    const [getFields, {\n      loading,\n      data\n    }] = useLazyQuery(DATO);\n    useEffect(() => {\n      getFields({\n        variables: {\n          id: idToRender\n        }\n      });\n\n      if (data) {\n        console.log(data);\n        setfunctionToRender( /*#__PURE__*/_jsxDEV(Funct, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this));\n      }\n    }, [data]);\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => getFields({\n        variables: {\n          id: idToRender\n        }\n      }),\n      value: \"Javascript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(FunctionIdToRender, \"Vq6BOzVrwLDs6r8lPcf/5bqzH0M=\", false, function () {\n    return [useLazyQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [functionToRender, /*#__PURE__*/_jsxDEV(FunctionIdToRender, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(Dato, \"moiRcPSzfhnjM6AUYbfFIhDRMp8=\");\n\n_c = Dato;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dato\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","useLazyQuery","Dato","idToRender","setidTorender","functionToRender","setfunctionToRender","RenderChild","props","console","log","child","map","x","index","Name","ID","Funct","prop","data","dato","name","Description","info","father","FunctionIdToRender","DATO","getFields","loading","variables","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nexport default function Dato() {\n  const [idToRender, setidTorender] = useState(\"36\");\n  const [functionToRender, setfunctionToRender] = useState(\"\");\n\n  function RenderChild(props) {\n    console.log(props.child, \"propsrender child\");\n    return props.child.map((x, index) => (\n      <>\n        <input type=\"button\" key={index} value={x.Name} onClick={()=>setidTorender(x.ID)}></input>\n        <br></br>\n      </>\n    ));\n  }\n\n  function Funct(prop) {\n    console.log(prop, \"prop\");\n    return (\n      <>\n        <div>\n          <p>Name:{prop.data.dato.name}</p>\n          <p>Description:{prop.data.dato.Description}</p>\n          <p>Info:{prop.data.dato.info}</p>\n          <p>father{prop.data.dato.father}</p>\n        </div>\n        <RenderChild child={prop.data.dato.child} />\n      </>\n    );\n  }\n  function FunctionIdToRender() {\n    const DATO = gql`\n      query dato($id: String) {\n        dato(id: $id) {\n          name\n          info\n          Description\n          father\n          child {\n            ID\n            Name\n          }\n        }\n      }\n    `;\n\n    const [getFields, { loading, data }] = useLazyQuery(DATO);\n    useEffect(() => {\n      getFields({ variables: { id: idToRender } })\n      if (data) {\n        console.log(data);\n        setfunctionToRender(<Funct data={data} />);\n      }\n    }, [data]);\n    return (\n      <input\n        type=\"button\"\n        onClick={() => getFields({ variables: { id: idToRender } })}\n        value=\"Javascript\"\n      ></input>\n    );\n  }\n  return (\n    <>\n      <div>\n        {functionToRender}\n        <FunctionIdToRender />\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}