{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\nexport default function Home() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [functio, setFunction] = useState(\"\");\n  const [inputsUser, setinputsUser] = useState({\n    id: \"36\",\n    name: \"\",\n    description: \"\",\n    extraInfo: \"\",\n    child: []\n  });\n  const [renderDataLoading, setrenderDataLoading] = useState(null);\n\n  function QueryRequest() {\n    _s();\n\n    const DATO = gql`\n  query dato($id: String) {\n    dato(id: $id) {\n      name\n      info\n      Description\n    }\n  }\n`;\n    const [getFields, {\n      loading,\n      data\n    }] = useLazyQuery(DATO);\n    useEffect(() => {\n      loading ? setrenderDataLoading( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)) : setrenderDataLoading( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n\n      if (data) {\n        setrenderDataLoading( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name:\", data.dato.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Info:\", data.dato.info]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description:\", data.dato.Description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this));\n      }\n    }, [loading, data]);\n  }\n\n  _s(QueryRequest, \"Vq6BOzVrwLDs6r8lPcf/5bqzH0M=\", false, function () {\n    return [useLazyQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          name: e.target.value\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          description: e.target.value\n        }),\n        placeholder: \"Descriptio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinputsUser({ ...inputsUser,\n          extraInfo: e.target.value\n        }),\n        placeholder: \"ExtraInfo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => setFunction( /*#__PURE__*/_jsxDEV(QueryRequest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 36\n      }, this)),\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), renderDataLoading]\n  }, void 0, true);\n}\n\n_s2(Home, \"Pn3SBEZIdXduQy80oVftVcjVLcg=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apollo2copia/ApolloReact2/ApolloReact/apolloclient/src/route/Dato.js"],"names":["React","useState","useEffect","gql","useMutation","useLazyQuery","Home","functio","setFunction","inputsUser","setinputsUser","id","name","description","extraInfo","child","renderDataLoading","setrenderDataLoading","QueryRequest","DATO","getFields","loading","data","dato","info","Description","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation, useLazyQuery } from \"@apollo/client\";\n\nexport default function Home() {\n  \n\n  const [functio, setFunction] = useState(\"\")\n  const [inputsUser, setinputsUser] = useState({\n    id: \"36\",\n    name: \"\",\n    description: \"\",\n    extraInfo: \"\",\n    child: [],\n  });\n  const [renderDataLoading, setrenderDataLoading] = useState(null);\n\nfunction QueryRequest(){\n  \n  const DATO = gql`\n  query dato($id: String) {\n    dato(id: $id) {\n      name\n      info\n      Description\n    }\n  }\n`;\nconst [getFields, { loading, data }] = useLazyQuery(DATO);\nuseEffect(() => {\n  loading\n    ? setrenderDataLoading(\n        <>\n          <p>loading</p>\n        </>\n      )\n    : setrenderDataLoading(<></>);\n\n  if (data) {\n    setrenderDataLoading(\n      <div>\n        <p>Name:{data.dato.name}</p>\n        <p>Info:{data.dato.info}</p>\n        <p>Description:{data.dato.Description}</p>\n      </div>\n    );\n  }\n}, [loading, data]);\n\n\n}\n\n\n\n\n\n  \n\n  \n  \n\n  \n  \n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, name: e.target.value })\n          }\n          placeholder=\"Name\"\n        ></input>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, description: e.target.value })\n          }\n          placeholder=\"Descriptio\"\n        ></input>\n        <input\n          type=\"text\"\n          onChange={(e) =>\n            setinputsUser({ ...inputsUser, extraInfo: e.target.value })\n          }\n          placeholder=\"ExtraInfo\"\n        ></input>\n      </div>\n      <input\n        type=\"button\"\n        onClick={() => setFunction(<QueryRequest />)}\n        value=\"Submit\"\n      ></input>\n      {renderDataLoading}\n    </>\n  );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}