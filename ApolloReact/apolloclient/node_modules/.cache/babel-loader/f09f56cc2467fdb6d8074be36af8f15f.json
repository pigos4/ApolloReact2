{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielpiga/Desktop/apolloreact/apolloclient/src/route/route.js\";\nimport { BrowserRouter as Route } from \"react-router-dom\";\n\nconst Homes = require('../route/Home').default;\n\nconst route = [{\n  path: \"/xx\",\n  component: Homes\n}];\n\nfunction RouteWithSubRoutes(route) {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: props =>\n    /*#__PURE__*/\n    // pass the sub-routes down to keep nesting\n    _jsxDEV(route.component, { ...props,\n      routes: route.routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }, this);\n}\n\n_c = RouteWithSubRoutes;\nmodule.exports.RouteWithSubRoutes = RouteWithSubRoutes;\nmod;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteWithSubRoutes\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/apolloreact/apolloclient/src/route/route.js"],"names":["BrowserRouter","Route","Homes","require","default","route","path","component","RouteWithSubRoutes","props","routes","module","exports","mod"],"mappings":";;AACA,SAAUA,aAAa,IAAKC,KAA5B,QAAwC,kBAAxC;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,OAAvC;;AAGA,MAAMC,KAAK,GAAE,CACT;AACAC,EAAAA,IAAI,EAAC,KADL;AAEAC,EAAAA,SAAS,EAAEL;AAFX,CADS,CAAb;;AAMC,SAASM,kBAAT,CAA4BH,KAA5B,EAAmC;AAC5B,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACC,IADd;AAEE,IAAA,MAAM,EAAEG,KAAK;AAAA;AACX;AACA,YAAC,KAAD,CAAO,SAAP,OAAqBA,KAArB;AAA4B,MAAA,MAAM,EAAEJ,KAAK,CAACK;AAA1C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAVGF,kB;AAaTG,MAAM,CAACC,OAAP,CAAeJ,kBAAf,GAAoCA,kBAApC;AACAK,GAAG","sourcesContent":["\nimport {  BrowserRouter as  Route} from \"react-router-dom\";\nconst Homes = require('../route/Home').default\n\n\nconst route =[\n    {\n    path:\"/xx\",\n    component: Homes }\n    ]\n    \n function RouteWithSubRoutes(route) {\n        return (\n          <Route\n            path={route.path}\n            render={props => (\n              // pass the sub-routes down to keep nesting\n              <route.component {...props} routes={route.routes} />\n            )}\n          />\n        );\n      }\n\n\n module.exports.RouteWithSubRoutes = RouteWithSubRoutes;\n mod\n"]},"metadata":{},"sourceType":"module"}