{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/mutation/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\nconst ADD_USER = gql`\n  mutation($name: String!, $username: String!, $password: String!) {\n    addUser(name: $name, username: $username, password: $password) {\n      response\n    }\n  }\n`;\nexport default function Mut() {\n  _s();\n\n  const [addUser, {\n    data,\n    loading\n  }] = useMutation(ADD_USER);\n  const [user, setUser] = useState({\n    name: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"smallContainer\",\n        onChange: e => setUser({\n          name: e.target.value,\n          username: user.username,\n          password: user.password\n        }),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"smallContainer\",\n        type: \"text\",\n        onChange: e => {\n          setUser({\n            name: user.name,\n            username: e.target.value,\n            password: user.password\n          });\n        },\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"smallContainer\",\n        type: \"password\",\n        onChange: e => {\n          setUser({\n            name: user.name,\n            username: user.username,\n            password: e.target.value\n          });\n        },\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"smallContainer\",\n        type: \"button\",\n        value: \"Submit\",\n        onClick: () => {\n          addUser({\n            variables: user\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Complite the form to sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }, this), data ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} //`${data.addUser.response}`;\n\n_s(Mut, \"oP1oJqIy4Fanb5dc/+WJIeYZjVc=\", false, function () {\n  return [useMutation];\n});\n\n_c = Mut;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mut\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/Apollo2 copy/ApolloReact/apolloclient/src/graphql/mutation/Signup.js"],"names":["React","useState","gql","useMutation","Redirect","ADD_USER","Mut","addUser","data","loading","user","setUser","name","username","password","e","target","value","variables"],"mappings":";;;;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,QAAQ,GAAGH,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAe,SAASI,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAU;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAV,IAA+BN,WAAW,CAACE,QAAD,CAAhD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAAD,CAAhC;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACG,GADH,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAGE,QAAA,QAAQ,EAAGC,CAAD,IACRJ,OAAO,CAAC;AACNC,UAAAA,IAAI,EAAEG,CAAC,CAACC,MAAF,CAASC,KADT;AAENJ,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAFT;AAGNC,UAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAHT,SAAD,CAJX;AAUE,QAAA,WAAW,EAAC;AAVd;AAAA;AAAA;AAAA;AAAA,cAFF,eAcE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACfJ,UAAAA,OAAO,CAAC;AACNC,YAAAA,IAAI,EAAEF,IAAI,CAACE,IADL;AAENC,YAAAA,QAAQ,EAAEE,CAAC,CAACC,MAAF,CAASC,KAFb;AAGNH,YAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAHT,WAAD,CAAP;AAKD,SATH;AAUE,QAAA,WAAW,EAAC;AAVd;AAAA;AAAA;AAAA;AAAA,cAdF,eA0BE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACfJ,UAAAA,OAAO,CAAC;AACNC,YAAAA,IAAI,EAAEF,IAAI,CAACE,IADL;AAENC,YAAAA,QAAQ,EAAEH,IAAI,CAACG,QAFT;AAGNC,YAAAA,QAAQ,EAAEC,CAAC,CAACC,MAAF,CAASC;AAHb,WAAD,CAAP;AAKD,SATH;AAUE,QAAA,WAAW,EAAC;AAVd;AAAA;AAAA;AAAA;AAAA,cA1BF,eAsCE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAC,QAHR;AAIE,QAAA,OAAO,EAAE,MAAM;AACbV,UAAAA,OAAO,CAAC;AAAEW,YAAAA,SAAS,EAAER;AAAb,WAAD,CAAP;AACD;AANH;AAAA;AAAA;AAAA;AAAA,cAtCF,EA8CGD,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9C9B,EA+CGD,IAAI,gBAAG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAH,GAA+B,EA/CtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqDD,C,CACD;;GAzDwBF,G;UACeH,W;;;KADfG,G","sourcesContent":["import { React, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\n\nconst ADD_USER = gql`\n  mutation($name: String!, $username: String!, $password: String!) {\n    addUser(name: $name, username: $username, password: $password) {\n      response\n    }\n  }\n`;\n\nexport default function Mut() {\n  const [addUser, { data, loading }] = useMutation(ADD_USER);\n  const [user, setUser] = useState({ name: \"\", username: \"\", password: \"\" });\n  return (\n    <>\n      <div className=\"Container\">\n        {\" \"}\n        <input\n          type=\"text\"\n          className=\"smallContainer\"\n          onChange={(e) =>\n            setUser({\n              name: e.target.value,\n              username: user.username,\n              password: user.password,\n            })\n          }\n          placeholder=\"Name\"\n        ></input>\n        <input\n          className=\"smallContainer\"\n          type=\"text\"\n          onChange={(e) => {\n            setUser({\n              name: user.name,\n              username: e.target.value,\n              password: user.password,\n            });\n          }}\n          placeholder=\"Username\"\n        ></input>\n        <input\n          className=\"smallContainer\"\n          type=\"password\"\n          onChange={(e) => {\n            setUser({\n              name: user.name,\n              username: user.username,\n              password: e.target.value,\n            });\n          }}\n          placeholder=\"Password\"\n        ></input>\n        <input\n          className=\"smallContainer\"\n          type=\"button\"\n          value=\"Submit\"\n          onClick={() => {\n            addUser({ variables: user });\n          }}\n        ></input>\n        {loading ? <p>loading</p> : <p>Complite the form to sign up</p>}\n        {data ? <Redirect to={\"/data\"} /> : \"\"}\n      </div>\n    </>\n  );\n}\n//`${data.addUser.response}`;\n"]},"metadata":{},"sourceType":"module"}